<Type Name="PurviewCollections" FullName="Azure.Analytics.Purview.Catalog.PurviewCollections">
  <TypeSignature Language="C#" Value="public class PurviewCollections" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewCollections extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Catalog.PurviewCollections" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewCollections" />
  <TypeSignature Language="F#" Value="type PurviewCollections = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewCollections service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewCollections ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCollections.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewCollections for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateEntity">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdateEntity (string collection, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdateEntity(string collection, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCollections.CreateOrUpdateEntity(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateEntity (collection As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateEntity : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateOrUpdateEntity : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewCollections.CreateOrUpdateEntity (collection, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="collection"> the collection unique name. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            Creates or updates an entity to a collection.
            Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
            Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
            </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasEntityWithExtInfo</c>:
            <code>{
              referredEntities: Dictionary&lt;string, AtlasEntity&gt;, # Optional. The referred entities.
              entity: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
                businessAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. Business Attributes
                classifications: [
                  {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                    entityGuid: string, # Optional. The GUID of the entity.
                    entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                    removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                    validityPeriods: [
                      {
                        endTime: string, # Optional. The end of the time boundary.
                        startTime: string, # Optional. The start of the time boundary.
                        timeZone: string, # Optional. The timezone of the time boundary.
                      }
                    ], # Optional. An array of time boundaries indicating validity periods.
                    source: string, # Optional. indicate the source who create the classification detail
                    sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                  }
                ], # Optional. An array of classifications.
                createTime: number, # Optional. The created time of the record.
                createdBy: string, # Optional. The user who created the record.
                customAttributes: Dictionary&lt;string, string&gt;, # Optional. Custom Attribute
                guid: string, # Optional. The GUID of the entity.
                homeId: string, # Optional. The home ID of the entity.
                isIncomplete: boolean, # Optional. Whether it is a shell entity
                labels: [string], # Optional. labels
                meanings: [
                  {
                    confidence: number, # Optional. The confidence of the term assignment.
                    createdBy: string, # Optional. The user who created the record.
                    description: string, # Optional. The description of the term assignment.
                    displayText: string, # Optional. The display text.
                    expression: string, # Optional. The expression of the term assignment.
                    relationGuid: string, # Optional. The GUID of the relationship.
                    source: string, # Optional. The source of the term.
                    status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                    steward: string, # Optional. The steward of the term.
                    termGuid: string, # Optional. The GUID of the term.
                  }
                ], # Optional. An array of term assignment headers indicating the meanings of the entity.
                provenanceType: number, # Optional. Used to record the provenance of an instance of an entity or relationship.
                proxy: boolean, # Optional. Determines if there's a proxy.
                relationshipAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of relationship.
                status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                updateTime: number, # Optional. The update time of the record.
                updatedBy: string, # Optional. The user who updated the record.
                version: number, # Optional. The version of the entity.
                source: string, # Optional. indicate the source who create the classification detail
                sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Owner.
              }, # Optional. An instance of an entity - like hive_table, hive_database.
            }
            </code>
            
            Response Body:
            
            Schema for <c>EntityMutationResponse</c>:
            <code>{
              guidAssignments: Dictionary&lt;string, string&gt;, # Optional. A map of GUID assignments with entities.
              mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. The entity headers of mutated entities.
              partialUpdatedEntities: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  classificationNames: [string], # Optional. An array of classification names.
                  classifications: [
                    {
                      attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                      typeName: string, # Optional. The name of the type.
                      lastModifiedTS: string, # Optional. ETag for concurrency control.
                      entityGuid: string, # Optional. The GUID of the entity.
                      entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                      removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                      validityPeriods: [
                        {
                          endTime: string, # Optional. The end of the time boundary.
                          startTime: string, # Optional. The start of the time boundary.
                          timeZone: string, # Optional. The timezone of the time boundary.
                        }
                      ], # Optional. An array of time boundaries indicating validity periods.
                      source: string, # Optional. indicate the source who create the classification detail
                      sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                    }
                  ], # Optional. An array of classifications.
                  displayText: string, # Optional. The display text.
                  guid: string, # Optional. The GUID of the record.
                  isIncomplete: boolean, # Optional. Whether it is a shell entity
                  labels: [string], # Optional. labels
                  meaningNames: [string], # Optional. An array of meanings.
                  meanings: [
                    {
                      confidence: number, # Optional. The confidence of the term assignment.
                      createdBy: string, # Optional. The user who created the record.
                      description: string, # Optional. The description of the term assignment.
                      displayText: string, # Optional. The display text.
                      expression: string, # Optional. The expression of the term assignment.
                      relationGuid: string, # Optional. The GUID of the relationship.
                      source: string, # Optional. The source of the term.
                      status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                      steward: string, # Optional. The steward of the term.
                      termGuid: string, # Optional. The GUID of the term.
                    }
                  ], # Optional. An array of term assignment headers.
                  status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                }
              ], # Optional. An array of entity headers that partially updated.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collection" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="collection" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateEntityAsync (string collection, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateEntityAsync(string collection, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCollections.CreateOrUpdateEntityAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateEntityAsync (collection As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateEntityAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateEntityAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCollections.CreateOrUpdateEntityAsync (collection, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="collection"> the collection unique name. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            Creates or updates an entity to a collection.
            Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
            Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
            </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasEntityWithExtInfo</c>:
            <code>{
              referredEntities: Dictionary&lt;string, AtlasEntity&gt;, # Optional. The referred entities.
              entity: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
                businessAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. Business Attributes
                classifications: [
                  {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                    entityGuid: string, # Optional. The GUID of the entity.
                    entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                    removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                    validityPeriods: [
                      {
                        endTime: string, # Optional. The end of the time boundary.
                        startTime: string, # Optional. The start of the time boundary.
                        timeZone: string, # Optional. The timezone of the time boundary.
                      }
                    ], # Optional. An array of time boundaries indicating validity periods.
                    source: string, # Optional. indicate the source who create the classification detail
                    sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                  }
                ], # Optional. An array of classifications.
                createTime: number, # Optional. The created time of the record.
                createdBy: string, # Optional. The user who created the record.
                customAttributes: Dictionary&lt;string, string&gt;, # Optional. Custom Attribute
                guid: string, # Optional. The GUID of the entity.
                homeId: string, # Optional. The home ID of the entity.
                isIncomplete: boolean, # Optional. Whether it is a shell entity
                labels: [string], # Optional. labels
                meanings: [
                  {
                    confidence: number, # Optional. The confidence of the term assignment.
                    createdBy: string, # Optional. The user who created the record.
                    description: string, # Optional. The description of the term assignment.
                    displayText: string, # Optional. The display text.
                    expression: string, # Optional. The expression of the term assignment.
                    relationGuid: string, # Optional. The GUID of the relationship.
                    source: string, # Optional. The source of the term.
                    status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                    steward: string, # Optional. The steward of the term.
                    termGuid: string, # Optional. The GUID of the term.
                  }
                ], # Optional. An array of term assignment headers indicating the meanings of the entity.
                provenanceType: number, # Optional. Used to record the provenance of an instance of an entity or relationship.
                proxy: boolean, # Optional. Determines if there's a proxy.
                relationshipAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of relationship.
                status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                updateTime: number, # Optional. The update time of the record.
                updatedBy: string, # Optional. The user who updated the record.
                version: number, # Optional. The version of the entity.
                source: string, # Optional. indicate the source who create the classification detail
                sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Owner.
              }, # Optional. An instance of an entity - like hive_table, hive_database.
            }
            </code>
            
            Response Body:
            
            Schema for <c>EntityMutationResponse</c>:
            <code>{
              guidAssignments: Dictionary&lt;string, string&gt;, # Optional. A map of GUID assignments with entities.
              mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. The entity headers of mutated entities.
              partialUpdatedEntities: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  classificationNames: [string], # Optional. An array of classification names.
                  classifications: [
                    {
                      attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                      typeName: string, # Optional. The name of the type.
                      lastModifiedTS: string, # Optional. ETag for concurrency control.
                      entityGuid: string, # Optional. The GUID of the entity.
                      entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                      removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                      validityPeriods: [
                        {
                          endTime: string, # Optional. The end of the time boundary.
                          startTime: string, # Optional. The start of the time boundary.
                          timeZone: string, # Optional. The timezone of the time boundary.
                        }
                      ], # Optional. An array of time boundaries indicating validity periods.
                      source: string, # Optional. indicate the source who create the classification detail
                      sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                    }
                  ], # Optional. An array of classifications.
                  displayText: string, # Optional. The display text.
                  guid: string, # Optional. The GUID of the record.
                  isIncomplete: boolean, # Optional. Whether it is a shell entity
                  labels: [string], # Optional. labels
                  meaningNames: [string], # Optional. An array of meanings.
                  meanings: [
                    {
                      confidence: number, # Optional. The confidence of the term assignment.
                      createdBy: string, # Optional. The user who created the record.
                      description: string, # Optional. The description of the term assignment.
                      displayText: string, # Optional. The display text.
                      expression: string, # Optional. The expression of the term assignment.
                      relationGuid: string, # Optional. The GUID of the relationship.
                      source: string, # Optional. The source of the term.
                      status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                      steward: string, # Optional. The steward of the term.
                      termGuid: string, # Optional. The GUID of the term.
                    }
                  ], # Optional. An array of term assignment headers.
                  status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                }
              ], # Optional. An array of entity headers that partially updated.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collection" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="collection" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateEntityInBulk">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdateEntityInBulk (string collection, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdateEntityInBulk(string collection, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCollections.CreateOrUpdateEntityInBulk(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateEntityInBulk (collection As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateEntityInBulk : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateOrUpdateEntityInBulk : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewCollections.CreateOrUpdateEntityInBulk (collection, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="collection"> the collection unique name. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            Creates or updates entities in bulk to a collection.
            Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
            Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
            </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasEntitiesWithExtInfo</c>:
            <code>{
              referredEntities: Dictionary&lt;string, AtlasEntity&gt;, # Optional. The referred entities.
              entities: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  businessAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. Business Attributes
                  classifications: [
                    {
                      attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                      typeName: string, # Optional. The name of the type.
                      lastModifiedTS: string, # Optional. ETag for concurrency control.
                      entityGuid: string, # Optional. The GUID of the entity.
                      entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                      removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                      validityPeriods: [
                        {
                          endTime: string, # Optional. The end of the time boundary.
                          startTime: string, # Optional. The start of the time boundary.
                          timeZone: string, # Optional. The timezone of the time boundary.
                        }
                      ], # Optional. An array of time boundaries indicating validity periods.
                      source: string, # Optional. indicate the source who create the classification detail
                      sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                    }
                  ], # Optional. An array of classifications.
                  createTime: number, # Optional. The created time of the record.
                  createdBy: string, # Optional. The user who created the record.
                  customAttributes: Dictionary&lt;string, string&gt;, # Optional. Custom Attribute
                  guid: string, # Optional. The GUID of the entity.
                  homeId: string, # Optional. The home ID of the entity.
                  isIncomplete: boolean, # Optional. Whether it is a shell entity
                  labels: [string], # Optional. labels
                  meanings: [
                    {
                      confidence: number, # Optional. The confidence of the term assignment.
                      createdBy: string, # Optional. The user who created the record.
                      description: string, # Optional. The description of the term assignment.
                      displayText: string, # Optional. The display text.
                      expression: string, # Optional. The expression of the term assignment.
                      relationGuid: string, # Optional. The GUID of the relationship.
                      source: string, # Optional. The source of the term.
                      status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                      steward: string, # Optional. The steward of the term.
                      termGuid: string, # Optional. The GUID of the term.
                    }
                  ], # Optional. An array of term assignment headers indicating the meanings of the entity.
                  provenanceType: number, # Optional. Used to record the provenance of an instance of an entity or relationship.
                  proxy: boolean, # Optional. Determines if there's a proxy.
                  relationshipAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of relationship.
                  status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  updateTime: number, # Optional. The update time of the record.
                  updatedBy: string, # Optional. The user who updated the record.
                  version: number, # Optional. The version of the entity.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                  contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Owner.
                }
              ], # Optional. An array of entities.
            }
            </code>
            
            Response Body:
            
            Schema for <c>EntityMutationResponse</c>:
            <code>{
              guidAssignments: Dictionary&lt;string, string&gt;, # Optional. A map of GUID assignments with entities.
              mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. The entity headers of mutated entities.
              partialUpdatedEntities: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  classificationNames: [string], # Optional. An array of classification names.
                  classifications: [
                    {
                      attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                      typeName: string, # Optional. The name of the type.
                      lastModifiedTS: string, # Optional. ETag for concurrency control.
                      entityGuid: string, # Optional. The GUID of the entity.
                      entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                      removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                      validityPeriods: [
                        {
                          endTime: string, # Optional. The end of the time boundary.
                          startTime: string, # Optional. The start of the time boundary.
                          timeZone: string, # Optional. The timezone of the time boundary.
                        }
                      ], # Optional. An array of time boundaries indicating validity periods.
                      source: string, # Optional. indicate the source who create the classification detail
                      sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                    }
                  ], # Optional. An array of classifications.
                  displayText: string, # Optional. The display text.
                  guid: string, # Optional. The GUID of the record.
                  isIncomplete: boolean, # Optional. Whether it is a shell entity
                  labels: [string], # Optional. labels
                  meaningNames: [string], # Optional. An array of meanings.
                  meanings: [
                    {
                      confidence: number, # Optional. The confidence of the term assignment.
                      createdBy: string, # Optional. The user who created the record.
                      description: string, # Optional. The description of the term assignment.
                      displayText: string, # Optional. The display text.
                      expression: string, # Optional. The expression of the term assignment.
                      relationGuid: string, # Optional. The GUID of the relationship.
                      source: string, # Optional. The source of the term.
                      status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                      steward: string, # Optional. The steward of the term.
                      termGuid: string, # Optional. The GUID of the term.
                    }
                  ], # Optional. An array of term assignment headers.
                  status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                }
              ], # Optional. An array of entity headers that partially updated.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collection" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="collection" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateEntityInBulkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateEntityInBulkAsync (string collection, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateEntityInBulkAsync(string collection, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCollections.CreateOrUpdateEntityInBulkAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateEntityInBulkAsync (collection As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateEntityInBulkAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateEntityInBulkAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCollections.CreateOrUpdateEntityInBulkAsync (collection, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="collection"> the collection unique name. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary>
            Creates or updates entities in bulk to a collection.
            Existing entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.
            Map and array of collections are not well supported. E.g., array&lt;array&lt;int&gt;&gt;, array&lt;map&lt;string, int&gt;&gt;.
            </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasEntitiesWithExtInfo</c>:
            <code>{
              referredEntities: Dictionary&lt;string, AtlasEntity&gt;, # Optional. The referred entities.
              entities: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  businessAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. Business Attributes
                  classifications: [
                    {
                      attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                      typeName: string, # Optional. The name of the type.
                      lastModifiedTS: string, # Optional. ETag for concurrency control.
                      entityGuid: string, # Optional. The GUID of the entity.
                      entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                      removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                      validityPeriods: [
                        {
                          endTime: string, # Optional. The end of the time boundary.
                          startTime: string, # Optional. The start of the time boundary.
                          timeZone: string, # Optional. The timezone of the time boundary.
                        }
                      ], # Optional. An array of time boundaries indicating validity periods.
                      source: string, # Optional. indicate the source who create the classification detail
                      sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                    }
                  ], # Optional. An array of classifications.
                  createTime: number, # Optional. The created time of the record.
                  createdBy: string, # Optional. The user who created the record.
                  customAttributes: Dictionary&lt;string, string&gt;, # Optional. Custom Attribute
                  guid: string, # Optional. The GUID of the entity.
                  homeId: string, # Optional. The home ID of the entity.
                  isIncomplete: boolean, # Optional. Whether it is a shell entity
                  labels: [string], # Optional. labels
                  meanings: [
                    {
                      confidence: number, # Optional. The confidence of the term assignment.
                      createdBy: string, # Optional. The user who created the record.
                      description: string, # Optional. The description of the term assignment.
                      displayText: string, # Optional. The display text.
                      expression: string, # Optional. The expression of the term assignment.
                      relationGuid: string, # Optional. The GUID of the relationship.
                      source: string, # Optional. The source of the term.
                      status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                      steward: string, # Optional. The steward of the term.
                      termGuid: string, # Optional. The GUID of the term.
                    }
                  ], # Optional. An array of term assignment headers indicating the meanings of the entity.
                  provenanceType: number, # Optional. Used to record the provenance of an instance of an entity or relationship.
                  proxy: boolean, # Optional. Determines if there's a proxy.
                  relationshipAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of relationship.
                  status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  updateTime: number, # Optional. The update time of the record.
                  updatedBy: string, # Optional. The user who updated the record.
                  version: number, # Optional. The version of the entity.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                  contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Owner.
                }
              ], # Optional. An array of entities.
            }
            </code>
            
            Response Body:
            
            Schema for <c>EntityMutationResponse</c>:
            <code>{
              guidAssignments: Dictionary&lt;string, string&gt;, # Optional. A map of GUID assignments with entities.
              mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. The entity headers of mutated entities.
              partialUpdatedEntities: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  classificationNames: [string], # Optional. An array of classification names.
                  classifications: [
                    {
                      attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                      typeName: string, # Optional. The name of the type.
                      lastModifiedTS: string, # Optional. ETag for concurrency control.
                      entityGuid: string, # Optional. The GUID of the entity.
                      entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                      removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                      validityPeriods: [
                        {
                          endTime: string, # Optional. The end of the time boundary.
                          startTime: string, # Optional. The start of the time boundary.
                          timeZone: string, # Optional. The timezone of the time boundary.
                        }
                      ], # Optional. An array of time boundaries indicating validity periods.
                      source: string, # Optional. indicate the source who create the classification detail
                      sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                    }
                  ], # Optional. An array of classifications.
                  displayText: string, # Optional. The display text.
                  guid: string, # Optional. The GUID of the record.
                  isIncomplete: boolean, # Optional. Whether it is a shell entity
                  labels: [string], # Optional. labels
                  meaningNames: [string], # Optional. An array of meanings.
                  meanings: [
                    {
                      confidence: number, # Optional. The confidence of the term assignment.
                      createdBy: string, # Optional. The user who created the record.
                      description: string, # Optional. The description of the term assignment.
                      displayText: string, # Optional. The display text.
                      expression: string, # Optional. The expression of the term assignment.
                      relationGuid: string, # Optional. The GUID of the relationship.
                      source: string, # Optional. The source of the term.
                      status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                      steward: string, # Optional. The steward of the term.
                      termGuid: string, # Optional. The GUID of the term.
                    }
                  ], # Optional. An array of term assignment headers.
                  status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                }
              ], # Optional. An array of entity headers that partially updated.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collection" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="collection" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveEntitiesToCollection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response MoveEntitiesToCollection (string collection, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response MoveEntitiesToCollection(string collection, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCollections.MoveEntitiesToCollection(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveEntitiesToCollection (collection As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member MoveEntitiesToCollection : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.MoveEntitiesToCollection : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewCollections.MoveEntitiesToCollection (collection, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="collection"> the collection unique name. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Move existing entities to the target collection. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>MoveEntitiesRequest</c>:
            <code>{
              entityGuids: [string], # Optional. An array of entity guids to be moved to target collection.
            }
            </code>
            
            Response Body:
            
            Schema for <c>EntityMutationResponse</c>:
            <code>{
              guidAssignments: Dictionary&lt;string, string&gt;, # Optional. A map of GUID assignments with entities.
              mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. The entity headers of mutated entities.
              partialUpdatedEntities: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  classificationNames: [string], # Optional. An array of classification names.
                  classifications: [
                    {
                      attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                      typeName: string, # Optional. The name of the type.
                      lastModifiedTS: string, # Optional. ETag for concurrency control.
                      entityGuid: string, # Optional. The GUID of the entity.
                      entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                      removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                      validityPeriods: [
                        {
                          endTime: string, # Optional. The end of the time boundary.
                          startTime: string, # Optional. The start of the time boundary.
                          timeZone: string, # Optional. The timezone of the time boundary.
                        }
                      ], # Optional. An array of time boundaries indicating validity periods.
                      source: string, # Optional. indicate the source who create the classification detail
                      sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                    }
                  ], # Optional. An array of classifications.
                  displayText: string, # Optional. The display text.
                  guid: string, # Optional. The GUID of the record.
                  isIncomplete: boolean, # Optional. Whether it is a shell entity
                  labels: [string], # Optional. labels
                  meaningNames: [string], # Optional. An array of meanings.
                  meanings: [
                    {
                      confidence: number, # Optional. The confidence of the term assignment.
                      createdBy: string, # Optional. The user who created the record.
                      description: string, # Optional. The description of the term assignment.
                      displayText: string, # Optional. The display text.
                      expression: string, # Optional. The expression of the term assignment.
                      relationGuid: string, # Optional. The GUID of the relationship.
                      source: string, # Optional. The source of the term.
                      status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                      steward: string, # Optional. The steward of the term.
                      termGuid: string, # Optional. The GUID of the term.
                    }
                  ], # Optional. An array of term assignment headers.
                  status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                }
              ], # Optional. An array of entity headers that partially updated.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collection" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="collection" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveEntitiesToCollectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; MoveEntitiesToCollectionAsync (string collection, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; MoveEntitiesToCollectionAsync(string collection, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCollections.MoveEntitiesToCollectionAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveEntitiesToCollectionAsync (collection As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member MoveEntitiesToCollectionAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.MoveEntitiesToCollectionAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCollections.MoveEntitiesToCollectionAsync (collection, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="collection"> the collection unique name. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Move existing entities to the target collection. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>MoveEntitiesRequest</c>:
            <code>{
              entityGuids: [string], # Optional. An array of entity guids to be moved to target collection.
            }
            </code>
            
            Response Body:
            
            Schema for <c>EntityMutationResponse</c>:
            <code>{
              guidAssignments: Dictionary&lt;string, string&gt;, # Optional. A map of GUID assignments with entities.
              mutatedEntities: Dictionary&lt;string, AtlasEntityHeader[]&gt;, # Optional. The entity headers of mutated entities.
              partialUpdatedEntities: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  classificationNames: [string], # Optional. An array of classification names.
                  classifications: [
                    {
                      attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                      typeName: string, # Optional. The name of the type.
                      lastModifiedTS: string, # Optional. ETag for concurrency control.
                      entityGuid: string, # Optional. The GUID of the entity.
                      entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                      removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                      validityPeriods: [
                        {
                          endTime: string, # Optional. The end of the time boundary.
                          startTime: string, # Optional. The start of the time boundary.
                          timeZone: string, # Optional. The timezone of the time boundary.
                        }
                      ], # Optional. An array of time boundaries indicating validity periods.
                      source: string, # Optional. indicate the source who create the classification detail
                      sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                    }
                  ], # Optional. An array of classifications.
                  displayText: string, # Optional. The display text.
                  guid: string, # Optional. The GUID of the record.
                  isIncomplete: boolean, # Optional. Whether it is a shell entity
                  labels: [string], # Optional. labels
                  meaningNames: [string], # Optional. An array of meanings.
                  meanings: [
                    {
                      confidence: number, # Optional. The confidence of the term assignment.
                      createdBy: string, # Optional. The user who created the record.
                      description: string, # Optional. The description of the term assignment.
                      displayText: string, # Optional. The display text.
                      expression: string, # Optional. The expression of the term assignment.
                      relationGuid: string, # Optional. The GUID of the relationship.
                      source: string, # Optional. The source of the term.
                      status: "DISCOVERED" | "PROPOSED" | "IMPORTED" | "VALIDATED" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of terms assignment.
                      steward: string, # Optional. The steward of the term.
                      termGuid: string, # Optional. The GUID of the term.
                    }
                  ], # Optional. An array of term assignment headers.
                  status: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                }
              ], # Optional. An array of entity headers that partially updated.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collection" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="collection" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewCollections.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Catalog.PurviewCollections.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
