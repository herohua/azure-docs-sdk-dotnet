<Type Name="PurviewGlossaries" FullName="Azure.Analytics.Purview.Catalog.PurviewGlossaries">
  <TypeSignature Language="C#" Value="public class PurviewGlossaries" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewGlossaries extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Catalog.PurviewGlossaries" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewGlossaries" />
  <TypeSignature Language="F#" Value="type PurviewGlossaries = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewGlossaries service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewGlossaries ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewGlossaries for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssignTermToEntities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AssignTermToEntities (string termGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AssignTermToEntities(string termGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.AssignTermToEntities(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AssignTermToEntities (termGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AssignTermToEntities : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.AssignTermToEntities : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.AssignTermToEntities (termGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Assign the given term to the provided list of related objects. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Below is the JSON schema for the request payload.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasRelatedObjectId</c>:
            <code>{
              guid: string, # Optional. The GUID of the object.
              typeName: string, # Optional. The name of the type.
              uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
              displayText: string, # Optional. The display text.
              entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
              relationshipType: string, # Optional.
              relationshipAttributes: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
              }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
              relationshipGuid: string, # Optional. The GUID of the relationship.
              relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="AssignTermToEntitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AssignTermToEntitiesAsync (string termGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AssignTermToEntitiesAsync(string termGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.AssignTermToEntitiesAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AssignTermToEntitiesAsync (termGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AssignTermToEntitiesAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AssignTermToEntitiesAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.AssignTermToEntitiesAsync (termGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Assign the given term to the provided list of related objects. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Below is the JSON schema for the request payload.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasRelatedObjectId</c>:
            <code>{
              guid: string, # Optional. The GUID of the object.
              typeName: string, # Optional. The name of the type.
              uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
              displayText: string, # Optional. The display text.
              entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
              relationshipType: string, # Optional.
              relationshipAttributes: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
              }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
              relationshipGuid: string, # Optional. The GUID of the relationship.
              relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateGlossary (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateGlossary(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossary(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossary (content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossary : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateGlossary : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.CreateGlossary (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create a glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details>
            
            Response Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateGlossaryAsync (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateGlossaryAsync(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryAsync(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryAsync (content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateGlossaryAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.CreateGlossaryAsync (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create a glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details>
            
            Response Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryCategories">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateGlossaryCategories (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateGlossaryCategories(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryCategories(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryCategories (content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryCategories : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateGlossaryCategories : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.CreateGlossaryCategories (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create glossary category in bulk. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code>
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryCategoriesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateGlossaryCategoriesAsync (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateGlossaryCategoriesAsync(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryCategoriesAsync(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryCategoriesAsync (content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryCategoriesAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateGlossaryCategoriesAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.CreateGlossaryCategoriesAsync (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create glossary category in bulk. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code>
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryCategory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateGlossaryCategory (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateGlossaryCategory(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryCategory(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryCategory (content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryCategory : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateGlossaryCategory : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.CreateGlossaryCategory (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create a glossary category. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryCategoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateGlossaryCategoryAsync (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateGlossaryCategoryAsync(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryCategoryAsync(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryCategoryAsync (content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryCategoryAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateGlossaryCategoryAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.CreateGlossaryCategoryAsync (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create a glossary category. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateGlossaryTerm (Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateGlossaryTerm(class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryTerm(Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryTerm (content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryTerm : Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateGlossaryTerm : Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.CreateGlossaryTerm (content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create a glossary term. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateGlossaryTermAsync (Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateGlossaryTermAsync(class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryTermAsync(Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryTermAsync (content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryTermAsync : Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateGlossaryTermAsync : Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.CreateGlossaryTermAsync (content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create a glossary term. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryTerms">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateGlossaryTerms (Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateGlossaryTerms(class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryTerms(Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryTerms (content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryTerms : Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateGlossaryTerms : Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.CreateGlossaryTerms (content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create glossary terms in bulk. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code>
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateGlossaryTermsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateGlossaryTermsAsync (Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateGlossaryTermsAsync(class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.CreateGlossaryTermsAsync(Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGlossaryTermsAsync (content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateGlossaryTermsAsync : Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateGlossaryTermsAsync : Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.CreateGlossaryTermsAsync (content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Create glossary terms in bulk. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code>
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteGlossary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteGlossary (string glossaryGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteGlossary(string glossaryGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.DeleteGlossary(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteGlossary (glossaryGuid As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteGlossary : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.DeleteGlossary : string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.DeleteGlossary (glossaryGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete a glossary. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteGlossaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteGlossaryAsync (string glossaryGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteGlossaryAsync(string glossaryGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.DeleteGlossaryAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteGlossaryAsync (glossaryGuid As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteGlossaryAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteGlossaryAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.DeleteGlossaryAsync (glossaryGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete a glossary. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteGlossaryCategory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteGlossaryCategory (string categoryGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteGlossaryCategory(string categoryGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.DeleteGlossaryCategory(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteGlossaryCategory (categoryGuid As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteGlossaryCategory : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.DeleteGlossaryCategory : string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.DeleteGlossaryCategory (categoryGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete a glossary category. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteGlossaryCategoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteGlossaryCategoryAsync (string categoryGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteGlossaryCategoryAsync(string categoryGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.DeleteGlossaryCategoryAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteGlossaryCategoryAsync (categoryGuid As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteGlossaryCategoryAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteGlossaryCategoryAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.DeleteGlossaryCategoryAsync (categoryGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete a glossary category. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteGlossaryTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteGlossaryTerm (string termGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteGlossaryTerm(string termGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.DeleteGlossaryTerm(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteGlossaryTerm (termGuid As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteGlossaryTerm : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.DeleteGlossaryTerm : string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.DeleteGlossaryTerm (termGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete a glossary term. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteGlossaryTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteGlossaryTermAsync (string termGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteGlossaryTermAsync(string termGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.DeleteGlossaryTermAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteGlossaryTermAsync (termGuid As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteGlossaryTermAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteGlossaryTermAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.DeleteGlossaryTermAsync (termGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete a glossary term. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteTermAssignmentFromEntities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteTermAssignmentFromEntities (string termGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteTermAssignmentFromEntities(string termGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.DeleteTermAssignmentFromEntities(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteTermAssignmentFromEntities (termGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteTermAssignmentFromEntities : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.DeleteTermAssignmentFromEntities : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.DeleteTermAssignmentFromEntities (termGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete the term assignment for the given list of related objects. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Below is the JSON schema for the request payload.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasRelatedObjectId</c>:
            <code>{
              guid: string, # Optional. The GUID of the object.
              typeName: string, # Optional. The name of the type.
              uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
              displayText: string, # Optional. The display text.
              entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
              relationshipType: string, # Optional.
              relationshipAttributes: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
              }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
              relationshipGuid: string, # Optional. The GUID of the relationship.
              relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteTermAssignmentFromEntitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteTermAssignmentFromEntitiesAsync (string termGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteTermAssignmentFromEntitiesAsync(string termGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.DeleteTermAssignmentFromEntitiesAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteTermAssignmentFromEntitiesAsync (termGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteTermAssignmentFromEntitiesAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteTermAssignmentFromEntitiesAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.DeleteTermAssignmentFromEntitiesAsync (termGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete the term assignment for the given list of related objects. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Below is the JSON schema for the request payload.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasRelatedObjectId</c>:
            <code>{
              guid: string, # Optional. The GUID of the object.
              typeName: string, # Optional. The name of the type.
              uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
              displayText: string, # Optional. The display text.
              entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
              relationshipType: string, # Optional.
              relationshipAttributes: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
              }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
              relationshipGuid: string, # Optional. The GUID of the relationship.
              relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportGlossaryTermsAsCsv">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ExportGlossaryTermsAsCsv (string glossaryGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ExportGlossaryTermsAsCsv(string glossaryGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.ExportGlossaryTermsAsCsv(System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportGlossaryTermsAsCsv (glossaryGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ExportGlossaryTermsAsCsv : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.ExportGlossaryTermsAsCsv : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.ExportGlossaryTermsAsCsv (glossaryGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Export Glossary Terms as csv file. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportGlossaryTermsAsCsvAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ExportGlossaryTermsAsCsvAsync (string glossaryGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ExportGlossaryTermsAsCsvAsync(string glossaryGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.ExportGlossaryTermsAsCsvAsync(System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExportGlossaryTermsAsCsvAsync (glossaryGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ExportGlossaryTermsAsCsvAsync : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ExportGlossaryTermsAsCsvAsync : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.ExportGlossaryTermsAsCsvAsync (glossaryGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Export Glossary Terms as csv file. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCategoryTerms">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetCategoryTerms (string categoryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetCategoryTerms(string categoryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetCategoryTerms(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCategoryTerms (categoryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetCategoryTerms : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetCategoryTerms : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetCategoryTerms (categoryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all terms associated with the specific category. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasRelatedTermHeader</c>:
            <code>{
              description: string, # Optional. The description of the related term.
              displayText: string, # Optional. The display text.
              expression: string, # Optional. The expression of the term.
              relationGuid: string, # Optional. The GUID of the relationship.
              source: string, # Optional. The source of the term.
              status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
              steward: string, # Optional. The steward of the term.
              termGuid: string, # Optional. The GUID of the term.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCategoryTermsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetCategoryTermsAsync (string categoryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetCategoryTermsAsync(string categoryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetCategoryTermsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCategoryTermsAsync (categoryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetCategoryTermsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetCategoryTermsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetCategoryTermsAsync (categoryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all terms associated with the specific category. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasRelatedTermHeader</c>:
            <code>{
              description: string, # Optional. The description of the related term.
              displayText: string, # Optional. The display text.
              expression: string, # Optional. The expression of the term.
              relationGuid: string, # Optional. The GUID of the relationship.
              source: string, # Optional. The source of the term.
              status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
              steward: string, # Optional. The steward of the term.
              termGuid: string, # Optional. The GUID of the term.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDetailedGlossary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetDetailedGlossary (string glossaryGuid, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetDetailedGlossary(string glossaryGuid, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetDetailedGlossary(System.String,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDetailedGlossary (glossaryGuid As String, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetDetailedGlossary : string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetDetailedGlossary : string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetDetailedGlossary (glossaryGuid, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a specific glossary with detailed information. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDetailedGlossaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetDetailedGlossaryAsync (string glossaryGuid, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetDetailedGlossaryAsync(string glossaryGuid, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetDetailedGlossaryAsync(System.String,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDetailedGlossaryAsync (glossaryGuid As String, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetDetailedGlossaryAsync : string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetDetailedGlossaryAsync : string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetDetailedGlossaryAsync (glossaryGuid, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a specific glossary with detailed information. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntitiesAssignedWithTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetEntitiesAssignedWithTerm (string termGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetEntitiesAssignedWithTerm(string termGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetEntitiesAssignedWithTerm(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntitiesAssignedWithTerm (termGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetEntitiesAssignedWithTerm : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetEntitiesAssignedWithTerm : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetEntitiesAssignedWithTerm (termGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all related objects assigned with the specified term. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasRelatedObjectId</c>:
            <code>{
              guid: string, # Optional. The GUID of the object.
              typeName: string, # Optional. The name of the type.
              uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
              displayText: string, # Optional. The display text.
              entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
              relationshipType: string, # Optional.
              relationshipAttributes: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
              }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
              relationshipGuid: string, # Optional. The GUID of the relationship.
              relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntitiesAssignedWithTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetEntitiesAssignedWithTermAsync (string termGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetEntitiesAssignedWithTermAsync(string termGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetEntitiesAssignedWithTermAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntitiesAssignedWithTermAsync (termGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetEntitiesAssignedWithTermAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetEntitiesAssignedWithTermAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetEntitiesAssignedWithTermAsync (termGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all related objects assigned with the specified term. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasRelatedObjectId</c>:
            <code>{
              guid: string, # Optional. The GUID of the object.
              typeName: string, # Optional. The name of the type.
              uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
              displayText: string, # Optional. The display text.
              entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
              relationshipType: string, # Optional.
              relationshipAttributes: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
              }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
              relationshipGuid: string, # Optional. The GUID of the relationship.
              relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaries">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossaries (int? limit = default, int? offset = default, string sort = default, bool? ignoreTermsAndCategories = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossaries(valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, valuetype System.Nullable`1&lt;bool&gt; ignoreTermsAndCategories, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaries (Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional ignoreTermsAndCategories As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaries : Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossaries : Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossaries (limit, offset, sort, ignoreTermsAndCategories, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="ignoreTermsAndCategories" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="ignoreTermsAndCategories"> Whether ignore terms and categories. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all glossaries registered with Atlas. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossary</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossariesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossariesAsync (int? limit = default, int? offset = default, string sort = default, bool? ignoreTermsAndCategories = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossariesAsync(valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, valuetype System.Nullable`1&lt;bool&gt; ignoreTermsAndCategories, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossariesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossariesAsync (Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional ignoreTermsAndCategories As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossariesAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossariesAsync : Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossariesAsync (limit, offset, sort, ignoreTermsAndCategories, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="ignoreTermsAndCategories" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="ignoreTermsAndCategories"> Whether ignore terms and categories. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all glossaries registered with Atlas. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossary</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossary (string glossaryGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossary(string glossaryGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossary(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossary (glossaryGuid As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossary : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossary : string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossary (glossaryGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a specific Glossary by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossaryAsync (string glossaryGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossaryAsync(string glossaryGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryAsync (glossaryGuid As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossaryAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossaryAsync (glossaryGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a specific Glossary by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryCategories">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossaryCategories (string glossaryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossaryCategories(string glossaryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryCategories(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryCategories (glossaryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryCategories : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossaryCategories : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossaryCategories (glossaryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get the categories belonging to a specific glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryCategoriesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossaryCategoriesAsync (string glossaryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossaryCategoriesAsync(string glossaryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryCategoriesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryCategoriesAsync (glossaryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryCategoriesAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossaryCategoriesAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossaryCategoriesAsync (glossaryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get the categories belonging to a specific glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryCategoriesHeaders">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossaryCategoriesHeaders (string glossaryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossaryCategoriesHeaders(string glossaryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryCategoriesHeaders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryCategoriesHeaders (glossaryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryCategoriesHeaders : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossaryCategoriesHeaders : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossaryCategoriesHeaders (glossaryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get the category headers belonging to a specific glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasRelatedCategoryHeader</c>:
            <code>{
              categoryGuid: string, # Optional. The GUID of the category.
              description: string, # Optional. The description of the category header.
              displayText: string, # Optional. The display text.
              parentCategoryGuid: string, # Optional. The GUID of the parent category.
              relationGuid: string, # Optional. The GUID of the relationship.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryCategoriesHeadersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossaryCategoriesHeadersAsync (string glossaryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossaryCategoriesHeadersAsync(string glossaryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryCategoriesHeadersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryCategoriesHeadersAsync (glossaryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryCategoriesHeadersAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossaryCategoriesHeadersAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossaryCategoriesHeadersAsync (glossaryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get the category headers belonging to a specific glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasRelatedCategoryHeader</c>:
            <code>{
              categoryGuid: string, # Optional. The GUID of the category.
              description: string, # Optional. The description of the category header.
              displayText: string, # Optional. The display text.
              parentCategoryGuid: string, # Optional. The GUID of the parent category.
              relationGuid: string, # Optional. The GUID of the relationship.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryCategory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossaryCategory (string categoryGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossaryCategory(string categoryGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryCategory(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryCategory (categoryGuid As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryCategory : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossaryCategory : string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossaryCategory (categoryGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get specific glossary category by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryCategoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossaryCategoryAsync (string categoryGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossaryCategoryAsync(string categoryGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryCategoryAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryCategoryAsync (categoryGuid As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryCategoryAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossaryCategoryAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossaryCategoryAsync (categoryGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get specific glossary category by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossaryTerm (string termGuid, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossaryTerm(string termGuid, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryTerm(System.String,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryTerm (termGuid As String, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryTerm : string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossaryTerm : string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossaryTerm (termGuid, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Get a specific glossary term by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;,
                  typeName: string,
                  lastModifiedTS: string,
                  entityGuid: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  removePropagationsOnEntityDelete: boolean,
                  validityPeriods: [
                    {
                      endTime: string,
                      startTime: string,
                      timeZone: string
                    }
                  ],
                  source: string,
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              longDescription: string,
              name: string,
              qualifiedName: string,
              shortDescription: string,
              lastModifiedTS: string,
              guid: string,
              abbreviation: string,
              templateName: [AnyObject],
              anchor: {
                displayText: string,
                glossaryGuid: string,
                relationGuid: string
              },
              antonyms: [
                {
                  description: string,
                  displayText: string,
                  expression: string,
                  relationGuid: string,
                  source: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER",
                  steward: string,
                  termGuid: string
                }
              ],
              createTime: number,
              createdBy: string,
              updateTime: number,
              updatedBy: string,
              status: "Draft" | "Approved" | "Alert" | "Expired",
              resources: [
                {
                  displayName: string,
                  url: string
                }
              ],
              contacts: Dictionary&lt;string, ContactBasic[]&gt;,
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              assignedEntities: [
                {
                  guid: string,
                  typeName: string,
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;,
                  displayText: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  relationshipType: string,
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;,
                    typeName: string,
                    lastModifiedTS: string
                  },
                  relationshipGuid: string,
                  relationshipStatus: "ACTIVE" | "DELETED"
                }
              ],
              categories: [
                {
                  categoryGuid: string,
                  description: string,
                  displayText: string,
                  relationGuid: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER"
                }
              ],
              classifies: [AtlasRelatedTermHeader],
              examples: [string],
              isA: [AtlasRelatedTermHeader],
              preferredTerms: [AtlasRelatedTermHeader],
              preferredToTerms: [AtlasRelatedTermHeader],
              replacedBy: [AtlasRelatedTermHeader],
              replacementTerms: [AtlasRelatedTermHeader],
              seeAlso: [AtlasRelatedTermHeader],
              synonyms: [AtlasRelatedTermHeader],
              translatedTerms: [AtlasRelatedTermHeader],
              translationTerms: [AtlasRelatedTermHeader],
              usage: string,
              validValues: [AtlasRelatedTermHeader],
              validValuesFor: [AtlasRelatedTermHeader]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossaryTerm (string termGuid, bool? includeTermHierarchy = default, System.Collections.Generic.IEnumerable&lt;string&gt; excludeRelationshipTypeList = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossaryTerm(string termGuid, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excludeRelationshipTypeList, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryTerm(System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryTerm (termGuid As String, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional excludeRelationshipTypeList As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryTerm : string * Nullable&lt;bool&gt; * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossaryTerm : string * Nullable&lt;bool&gt; * seq&lt;string&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossaryTerm (termGuid, includeTermHierarchy, excludeRelationshipTypeList, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="excludeRelationshipTypeList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="excludeRelationshipTypeList"> An array of relationship types which need to be excluded. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a specific glossary term by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossaryTermAsync (string termGuid, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossaryTermAsync(string termGuid, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryTermAsync(System.String,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryTermAsync (termGuid As String, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryTermAsync : string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossaryTermAsync : string * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossaryTermAsync (termGuid, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Get a specific glossary term by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;,
                  typeName: string,
                  lastModifiedTS: string,
                  entityGuid: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  removePropagationsOnEntityDelete: boolean,
                  validityPeriods: [
                    {
                      endTime: string,
                      startTime: string,
                      timeZone: string
                    }
                  ],
                  source: string,
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              longDescription: string,
              name: string,
              qualifiedName: string,
              shortDescription: string,
              lastModifiedTS: string,
              guid: string,
              abbreviation: string,
              templateName: [AnyObject],
              anchor: {
                displayText: string,
                glossaryGuid: string,
                relationGuid: string
              },
              antonyms: [
                {
                  description: string,
                  displayText: string,
                  expression: string,
                  relationGuid: string,
                  source: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER",
                  steward: string,
                  termGuid: string
                }
              ],
              createTime: number,
              createdBy: string,
              updateTime: number,
              updatedBy: string,
              status: "Draft" | "Approved" | "Alert" | "Expired",
              resources: [
                {
                  displayName: string,
                  url: string
                }
              ],
              contacts: Dictionary&lt;string, ContactBasic[]&gt;,
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              assignedEntities: [
                {
                  guid: string,
                  typeName: string,
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;,
                  displayText: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  relationshipType: string,
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;,
                    typeName: string,
                    lastModifiedTS: string
                  },
                  relationshipGuid: string,
                  relationshipStatus: "ACTIVE" | "DELETED"
                }
              ],
              categories: [
                {
                  categoryGuid: string,
                  description: string,
                  displayText: string,
                  relationGuid: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER"
                }
              ],
              classifies: [AtlasRelatedTermHeader],
              examples: [string],
              isA: [AtlasRelatedTermHeader],
              preferredTerms: [AtlasRelatedTermHeader],
              preferredToTerms: [AtlasRelatedTermHeader],
              replacedBy: [AtlasRelatedTermHeader],
              replacementTerms: [AtlasRelatedTermHeader],
              seeAlso: [AtlasRelatedTermHeader],
              synonyms: [AtlasRelatedTermHeader],
              translatedTerms: [AtlasRelatedTermHeader],
              translationTerms: [AtlasRelatedTermHeader],
              usage: string,
              validValues: [AtlasRelatedTermHeader],
              validValuesFor: [AtlasRelatedTermHeader]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossaryTermAsync (string termGuid, bool? includeTermHierarchy = default, System.Collections.Generic.IEnumerable&lt;string&gt; excludeRelationshipTypeList = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossaryTermAsync(string termGuid, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class System.Collections.Generic.IEnumerable`1&lt;string&gt; excludeRelationshipTypeList, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryTermAsync(System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.String},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryTermAsync (termGuid As String, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional excludeRelationshipTypeList As IEnumerable(Of String) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryTermAsync : string * Nullable&lt;bool&gt; * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossaryTermAsync : string * Nullable&lt;bool&gt; * seq&lt;string&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossaryTermAsync (termGuid, includeTermHierarchy, excludeRelationshipTypeList, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="excludeRelationshipTypeList" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="excludeRelationshipTypeList"> An array of relationship types which need to be excluded. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a specific glossary term by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryTermHeaders">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossaryTermHeaders (string glossaryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossaryTermHeaders(string glossaryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryTermHeaders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryTermHeaders (glossaryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryTermHeaders : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossaryTermHeaders : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossaryTermHeaders (glossaryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get term headers belonging to a specific glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasRelatedTermHeader</c>:
            <code>{
              description: string, # Optional. The description of the related term.
              displayText: string, # Optional. The display text.
              expression: string, # Optional. The expression of the term.
              relationGuid: string, # Optional. The GUID of the relationship.
              source: string, # Optional. The source of the term.
              status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
              steward: string, # Optional. The steward of the term.
              termGuid: string, # Optional. The GUID of the term.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryTermHeadersAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossaryTermHeadersAsync (string glossaryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossaryTermHeadersAsync(string glossaryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryTermHeadersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryTermHeadersAsync (glossaryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryTermHeadersAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossaryTermHeadersAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossaryTermHeadersAsync (glossaryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get term headers belonging to a specific glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasRelatedTermHeader</c>:
            <code>{
              description: string, # Optional. The description of the related term.
              displayText: string, # Optional. The display text.
              expression: string, # Optional. The expression of the term.
              relationGuid: string, # Optional. The GUID of the relationship.
              source: string, # Optional. The source of the term.
              status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
              steward: string, # Optional. The steward of the term.
              termGuid: string, # Optional. The GUID of the term.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryTerms">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetGlossaryTerms (string glossaryGuid, bool? includeTermHierarchy = default, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetGlossaryTerms(string glossaryGuid, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryTerms(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryTerms (glossaryGuid As String, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryTerms : string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetGlossaryTerms : string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetGlossaryTerms (glossaryGuid, includeTermHierarchy, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get terms belonging to a specific glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlossaryTermsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetGlossaryTermsAsync (string glossaryGuid, bool? includeTermHierarchy = default, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetGlossaryTermsAsync(string glossaryGuid, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetGlossaryTermsAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlossaryTermsAsync (glossaryGuid As String, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetGlossaryTermsAsync : string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetGlossaryTermsAsync : string * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetGlossaryTermsAsync (glossaryGuid, includeTermHierarchy, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get terms belonging to a specific glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImportCsvOperationStatus">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetImportCsvOperationStatus (string operationGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetImportCsvOperationStatus(string operationGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetImportCsvOperationStatus(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImportCsvOperationStatus (operationGuid As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetImportCsvOperationStatus : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetImportCsvOperationStatus : string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetImportCsvOperationStatus (operationGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="operationGuid"> The globally unique identifier for async operation/job. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get the status of import csv operation. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ImportCSVOperation</c>:
            <code>{
              id: string, # Optional. guid string
              status: "NotStarted" | "Succeeded" | "Failed" | "Running", # Optional. Enum of the status of import csv operation.
              createTime: string, # Optional. The created time of the record.
              lastUpdateTime: string, # Optional. The last updated time of the record.
              properties: {
                importedTerms: string, # Optional. Term numbers that already imported successfully
                totalTermsDetected: string, # Optional. Total term numbers that detected in csv
              }, # Optional.
              error: {
                errorCode: number, # Optional. Error code from async import job if fail
                errorMessage: string, # Optional. Error message from async import job if fail
              }, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetImportCsvOperationStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetImportCsvOperationStatusAsync (string operationGuid, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetImportCsvOperationStatusAsync(string operationGuid, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetImportCsvOperationStatusAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImportCsvOperationStatusAsync (operationGuid As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetImportCsvOperationStatusAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetImportCsvOperationStatusAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetImportCsvOperationStatusAsync (operationGuid, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationGuid" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="operationGuid"> The globally unique identifier for async operation/job. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get the status of import csv operation. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ImportCSVOperation</c>:
            <code>{
              id: string, # Optional. guid string
              status: "NotStarted" | "Succeeded" | "Failed" | "Running", # Optional. Enum of the status of import csv operation.
              createTime: string, # Optional. The created time of the record.
              lastUpdateTime: string, # Optional. The last updated time of the record.
              properties: {
                importedTerms: string, # Optional. Term numbers that already imported successfully
                totalTermsDetected: string, # Optional. Total term numbers that detected in csv
              }, # Optional.
              error: {
                errorCode: number, # Optional. Error code from async import job if fail
                errorMessage: string, # Optional. Error message from async import job if fail
              }, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="operationGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="operationGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCategories">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetRelatedCategories (string categoryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetRelatedCategories(string categoryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetRelatedCategories(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCategories (categoryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedCategories : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetRelatedCategories : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetRelatedCategories (categoryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all related categories (parent and children). Limit, offset, and sort parameters are currently not being enabled and won't work even they are passed. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>DictionaryOfpathsCic80AAtlasV2GlossaryCategoryCategoryguidRelatedGetResponses200ContentApplicationJsonSchemaAdditionalproperties</c>:
            <code>{
              categoryGuid: string, # Optional. The GUID of the category.
              description: string, # Optional. The description of the category header.
              displayText: string, # Optional. The display text.
              parentCategoryGuid: string, # Optional. The GUID of the parent category.
              relationGuid: string, # Optional. The GUID of the relationship.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCategoriesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetRelatedCategoriesAsync (string categoryGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetRelatedCategoriesAsync(string categoryGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetRelatedCategoriesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedCategoriesAsync (categoryGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedCategoriesAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetRelatedCategoriesAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetRelatedCategoriesAsync (categoryGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all related categories (parent and children). Limit, offset, and sort parameters are currently not being enabled and won't work even they are passed. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>DictionaryOfpathsCic80AAtlasV2GlossaryCategoryCategoryguidRelatedGetResponses200ContentApplicationJsonSchemaAdditionalproperties</c>:
            <code>{
              categoryGuid: string, # Optional. The GUID of the category.
              description: string, # Optional. The description of the category header.
              displayText: string, # Optional. The display text.
              parentCategoryGuid: string, # Optional. The GUID of the parent category.
              relationGuid: string, # Optional. The GUID of the relationship.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedTerms">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetRelatedTerms (string termGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetRelatedTerms(string termGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetRelatedTerms(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedTerms (termGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedTerms : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetRelatedTerms : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetRelatedTerms (termGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all related terms for a specific term by its GUID. Limit, offset, and sort parameters are currently not being enabled and won't work even they are passed. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>DictionaryOfpathsV84KwqAtlasV2GlossaryTermsTermguidRelatedGetResponses200ContentApplicationJsonSchemaAdditionalproperties</c>:
            <code>{
              description: string, # Optional. The description of the related term.
              displayText: string, # Optional. The display text.
              expression: string, # Optional. The expression of the term.
              relationGuid: string, # Optional. The GUID of the relationship.
              source: string, # Optional. The source of the term.
              status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
              steward: string, # Optional. The steward of the term.
              termGuid: string, # Optional. The GUID of the term.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedTermsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetRelatedTermsAsync (string termGuid, int? limit = default, int? offset = default, string sort = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetRelatedTermsAsync(string termGuid, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, string sort, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetRelatedTermsAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRelatedTermsAsync (termGuid As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional sort As String = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetRelatedTermsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetRelatedTermsAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetRelatedTermsAsync (termGuid, limit, offset, sort, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="sort"> The sort order, ASC (default) or DESC. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get all related terms for a specific term by its GUID. Limit, offset, and sort parameters are currently not being enabled and won't work even they are passed. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>DictionaryOfpathsV84KwqAtlasV2GlossaryTermsTermguidRelatedGetResponses200ContentApplicationJsonSchemaAdditionalproperties</c>:
            <code>{
              description: string, # Optional. The description of the related term.
              displayText: string, # Optional. The display text.
              expression: string, # Optional. The expression of the term.
              relationGuid: string, # Optional. The GUID of the relationship.
              source: string, # Optional. The source of the term.
              status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
              steward: string, # Optional. The steward of the term.
              termGuid: string, # Optional. The GUID of the term.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTermsByGlossaryName">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetTermsByGlossaryName (string glossaryName, int? limit = default, int? offset = default, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetTermsByGlossaryName(string glossaryName, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetTermsByGlossaryName(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTermsByGlossaryName (glossaryName As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetTermsByGlossaryName : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetTermsByGlossaryName : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.GetTermsByGlossaryName (glossaryName, limit, offset, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryName" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryName"> The name of the glossary. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get terms by glossary name. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTermsByGlossaryNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetTermsByGlossaryNameAsync (string glossaryName, int? limit = default, int? offset = default, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetTermsByGlossaryNameAsync(string glossaryName, valuetype System.Nullable`1&lt;int32&gt; limit, valuetype System.Nullable`1&lt;int32&gt; offset, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.GetTermsByGlossaryNameAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTermsByGlossaryNameAsync (glossaryName As String, Optional limit As Nullable(Of Integer) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetTermsByGlossaryNameAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetTermsByGlossaryNameAsync : string * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.GetTermsByGlossaryNameAsync (glossaryName, limit, offset, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryName" Type="System.String" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryName"> The name of the glossary. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get terms by glossary name. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ArrayOfAtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportGlossaryTermsViaCsv">
      <MemberSignature Language="C#" Value="public virtual Azure.Operation&lt;BinaryData&gt; ImportGlossaryTermsViaCsv (Azure.WaitUntil waitUntil, string glossaryGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Operation`1&lt;class System.BinaryData&gt; ImportGlossaryTermsViaCsv(valuetype Azure.WaitUntil waitUntil, string glossaryGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.ImportGlossaryTermsViaCsv(Azure.WaitUntil,System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportGlossaryTermsViaCsv (waitUntil As WaitUntil, glossaryGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Operation(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member ImportGlossaryTermsViaCsv : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;&#xA;override this.ImportGlossaryTermsViaCsv : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;" Usage="purviewGlossaries.ImportGlossaryTermsViaCsv (waitUntil, glossaryGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Operation&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Import Glossary Terms from local csv file. </summary>
        <returns> The <see cref="T:Azure.Operation`1" /> from the service that will contain a <see cref="T:System.BinaryData" /> object once the asynchronous operation on the service has completed. Details of the body schema for the operation's final value are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ImportCSVOperation</c>:
            <code>{
              id: string, # Optional. guid string
              status: "NotStarted" | "Succeeded" | "Failed" | "Running", # Optional. Enum of the status of import csv operation.
              createTime: string, # Optional. The created time of the record.
              lastUpdateTime: string, # Optional. The last updated time of the record.
              properties: {
                importedTerms: string, # Optional. Term numbers that already imported successfully
                totalTermsDetected: string, # Optional. Total term numbers that detected in csv
              }, # Optional.
              error: {
                errorCode: number, # Optional. Error code from async import job if fail
                errorMessage: string, # Optional. Error message from async import job if fail
              }, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportGlossaryTermsViaCsvAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt; ImportGlossaryTermsViaCsvAsync (Azure.WaitUntil waitUntil, string glossaryGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Operation`1&lt;class System.BinaryData&gt;&gt; ImportGlossaryTermsViaCsvAsync(valuetype Azure.WaitUntil waitUntil, string glossaryGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.ImportGlossaryTermsViaCsvAsync(Azure.WaitUntil,System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportGlossaryTermsViaCsvAsync (waitUntil As WaitUntil, glossaryGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Operation(Of BinaryData))" />
      <MemberSignature Language="F#" Value="abstract member ImportGlossaryTermsViaCsvAsync : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;&#xA;override this.ImportGlossaryTermsViaCsvAsync : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;" Usage="purviewGlossaries.ImportGlossaryTermsViaCsvAsync (waitUntil, glossaryGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Operation&lt;System.BinaryData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Import Glossary Terms from local csv file. </summary>
        <returns> The <see cref="T:Azure.Operation`1" /> from the service that will contain a <see cref="T:System.BinaryData" /> object once the asynchronous operation on the service has completed. Details of the body schema for the operation's final value are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ImportCSVOperation</c>:
            <code>{
              id: string, # Optional. guid string
              status: "NotStarted" | "Succeeded" | "Failed" | "Running", # Optional. Enum of the status of import csv operation.
              createTime: string, # Optional. The created time of the record.
              lastUpdateTime: string, # Optional. The last updated time of the record.
              properties: {
                importedTerms: string, # Optional. Term numbers that already imported successfully
                totalTermsDetected: string, # Optional. Total term numbers that detected in csv
              }, # Optional.
              error: {
                errorCode: number, # Optional. Error code from async import job if fail
                errorMessage: string, # Optional. Error message from async import job if fail
              }, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportGlossaryTermsViaCsvByGlossaryName">
      <MemberSignature Language="C#" Value="public virtual Azure.Operation&lt;BinaryData&gt; ImportGlossaryTermsViaCsvByGlossaryName (Azure.WaitUntil waitUntil, string glossaryName, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Operation`1&lt;class System.BinaryData&gt; ImportGlossaryTermsViaCsvByGlossaryName(valuetype Azure.WaitUntil waitUntil, string glossaryName, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.ImportGlossaryTermsViaCsvByGlossaryName(Azure.WaitUntil,System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportGlossaryTermsViaCsvByGlossaryName (waitUntil As WaitUntil, glossaryName As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Operation(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member ImportGlossaryTermsViaCsvByGlossaryName : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;&#xA;override this.ImportGlossaryTermsViaCsvByGlossaryName : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;" Usage="purviewGlossaries.ImportGlossaryTermsViaCsvByGlossaryName (waitUntil, glossaryName, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Operation&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="glossaryName" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="glossaryName"> The name of the glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Import Glossary Terms from local csv file by glossaryName. </summary>
        <returns> The <see cref="T:Azure.Operation`1" /> from the service that will contain a <see cref="T:System.BinaryData" /> object once the asynchronous operation on the service has completed. Details of the body schema for the operation's final value are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ImportCSVOperation</c>:
            <code>{
              id: string, # Optional. guid string
              status: "NotStarted" | "Succeeded" | "Failed" | "Running", # Optional. Enum of the status of import csv operation.
              createTime: string, # Optional. The created time of the record.
              lastUpdateTime: string, # Optional. The last updated time of the record.
              properties: {
                importedTerms: string, # Optional. Term numbers that already imported successfully
                totalTermsDetected: string, # Optional. Total term numbers that detected in csv
              }, # Optional.
              error: {
                errorCode: number, # Optional. Error code from async import job if fail
                errorMessage: string, # Optional. Error message from async import job if fail
              }, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryName" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="ImportGlossaryTermsViaCsvByGlossaryNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt; ImportGlossaryTermsViaCsvByGlossaryNameAsync (Azure.WaitUntil waitUntil, string glossaryName, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Operation`1&lt;class System.BinaryData&gt;&gt; ImportGlossaryTermsViaCsvByGlossaryNameAsync(valuetype Azure.WaitUntil waitUntil, string glossaryName, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.ImportGlossaryTermsViaCsvByGlossaryNameAsync(Azure.WaitUntil,System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportGlossaryTermsViaCsvByGlossaryNameAsync (waitUntil As WaitUntil, glossaryName As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Operation(Of BinaryData))" />
      <MemberSignature Language="F#" Value="abstract member ImportGlossaryTermsViaCsvByGlossaryNameAsync : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;&#xA;override this.ImportGlossaryTermsViaCsvByGlossaryNameAsync : Azure.WaitUntil * string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;" Usage="purviewGlossaries.ImportGlossaryTermsViaCsvByGlossaryNameAsync (waitUntil, glossaryName, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Operation&lt;System.BinaryData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="glossaryName" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="glossaryName"> The name of the glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Import Glossary Terms from local csv file by glossaryName. </summary>
        <returns> The <see cref="T:Azure.Operation`1" /> from the service that will contain a <see cref="T:System.BinaryData" /> object once the asynchronous operation on the service has completed. Details of the body schema for the operation's final value are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ImportCSVOperation</c>:
            <code>{
              id: string, # Optional. guid string
              status: "NotStarted" | "Succeeded" | "Failed" | "Running", # Optional. Enum of the status of import csv operation.
              createTime: string, # Optional. The created time of the record.
              lastUpdateTime: string, # Optional. The last updated time of the record.
              properties: {
                importedTerms: string, # Optional. Term numbers that already imported successfully
                totalTermsDetected: string, # Optional. Total term numbers that detected in csv
              }, # Optional.
              error: {
                errorCode: number, # Optional. Error code from async import job if fail
                errorMessage: string, # Optional. Error message from async import job if fail
              }, # Optional.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryName" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateGlossary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PartialUpdateGlossary (string glossaryGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PartialUpdateGlossary(string glossaryGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.PartialUpdateGlossary(System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateGlossary (glossaryGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateGlossary : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.PartialUpdateGlossary : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.PartialUpdateGlossary (glossaryGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the glossary partially. Some properties such as qualifiedName are not allowed to be updated. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateGlossaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PartialUpdateGlossaryAsync (string glossaryGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PartialUpdateGlossaryAsync(string glossaryGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.PartialUpdateGlossaryAsync(System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateGlossaryAsync (glossaryGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateGlossaryAsync : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PartialUpdateGlossaryAsync : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.PartialUpdateGlossaryAsync (glossaryGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the glossary partially. Some properties such as qualifiedName are not allowed to be updated. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateGlossaryCategory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PartialUpdateGlossaryCategory (string categoryGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PartialUpdateGlossaryCategory(string categoryGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.PartialUpdateGlossaryCategory(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateGlossaryCategory (categoryGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateGlossaryCategory : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.PartialUpdateGlossaryCategory : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.PartialUpdateGlossaryCategory (categoryGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the glossary category partially. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateGlossaryCategoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PartialUpdateGlossaryCategoryAsync (string categoryGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PartialUpdateGlossaryCategoryAsync(string categoryGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.PartialUpdateGlossaryCategoryAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateGlossaryCategoryAsync (categoryGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateGlossaryCategoryAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PartialUpdateGlossaryCategoryAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.PartialUpdateGlossaryCategoryAsync (categoryGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the glossary category partially. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateGlossaryTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PartialUpdateGlossaryTerm (string termGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PartialUpdateGlossaryTerm(string termGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.PartialUpdateGlossaryTerm(System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateGlossaryTerm (termGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateGlossaryTerm : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.PartialUpdateGlossaryTerm : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.PartialUpdateGlossaryTerm (termGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the glossary term partially. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="PartialUpdateGlossaryTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PartialUpdateGlossaryTermAsync (string termGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PartialUpdateGlossaryTermAsync(string termGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.PartialUpdateGlossaryTermAsync(System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartialUpdateGlossaryTermAsync (termGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PartialUpdateGlossaryTermAsync : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PartialUpdateGlossaryTermAsync : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.PartialUpdateGlossaryTermAsync (termGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the glossary term partially. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewGlossaries.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Catalog.PurviewGlossaries.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTermAssignmentFromEntities">
      <MemberSignature Language="C#" Value="public virtual Azure.Response RemoveTermAssignmentFromEntities (string termGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response RemoveTermAssignmentFromEntities(string termGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.RemoveTermAssignmentFromEntities(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTermAssignmentFromEntities (termGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member RemoveTermAssignmentFromEntities : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.RemoveTermAssignmentFromEntities : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.RemoveTermAssignmentFromEntities (termGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete the term assignment for the given list of related objects. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Below is the JSON schema for the request payload.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasRelatedObjectId</c>:
            <code>{
              guid: string, # Optional. The GUID of the object.
              typeName: string, # Optional. The name of the type.
              uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
              displayText: string, # Optional. The display text.
              entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
              relationshipType: string, # Optional.
              relationshipAttributes: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
              }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
              relationshipGuid: string, # Optional. The GUID of the relationship.
              relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTermAssignmentFromEntitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RemoveTermAssignmentFromEntitiesAsync (string termGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RemoveTermAssignmentFromEntitiesAsync(string termGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.RemoveTermAssignmentFromEntitiesAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTermAssignmentFromEntitiesAsync (termGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTermAssignmentFromEntitiesAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RemoveTermAssignmentFromEntitiesAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.RemoveTermAssignmentFromEntitiesAsync (termGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Delete the term assignment for the given list of related objects. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>
            Below is the JSON schema for the request payload.
            
            Request Body:
            
            Schema for <c>ArrayOfAtlasRelatedObjectId</c>:
            <code>{
              guid: string, # Optional. The GUID of the object.
              typeName: string, # Optional. The name of the type.
              uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
              displayText: string, # Optional. The display text.
              entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
              relationshipType: string, # Optional.
              relationshipAttributes: {
                attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                typeName: string, # Optional. The name of the type.
                lastModifiedTS: string, # Optional. ETag for concurrency control.
              }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
              relationshipGuid: string, # Optional. The GUID of the relationship.
              relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGlossary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateGlossary (string glossaryGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateGlossary(string glossaryGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.UpdateGlossary(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGlossary (glossaryGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateGlossary : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.UpdateGlossary : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.UpdateGlossary (glossaryGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the given glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details>
            
            Response Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGlossaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateGlossaryAsync (string glossaryGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateGlossaryAsync(string glossaryGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.UpdateGlossaryAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGlossaryAsync (glossaryGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateGlossaryAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateGlossaryAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.UpdateGlossaryAsync (glossaryGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glossaryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="glossaryGuid"> The globally unique identifier for glossary. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the given glossary. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details>
            
            Response Body:
            
            <details><summary>AtlasGlossaryExtInfo</summary>Schema for <c>AtlasGlossaryExtInfo</c>:
            <code>{
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of categories.
              language: string, # Optional. The language of the glossary.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
              usage: string, # Optional. The usage of the glossary.
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              categoryInfo: Dictionary&lt;string, AtlasGlossaryCategory&gt;, # Optional. The glossary category information.
              termInfo: Dictionary&lt;string, AtlasGlossaryTerm&gt;, # Optional. The glossary term information.
            }
            </code></details></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="glossaryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="glossaryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGlossaryCategory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateGlossaryCategory (string categoryGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateGlossaryCategory(string categoryGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.UpdateGlossaryCategory(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGlossaryCategory (categoryGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateGlossaryCategory : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.UpdateGlossaryCategory : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.UpdateGlossaryCategory (categoryGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the given glossary category by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGlossaryCategoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateGlossaryCategoryAsync (string categoryGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateGlossaryCategoryAsync(string categoryGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.UpdateGlossaryCategoryAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGlossaryCategoryAsync (categoryGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateGlossaryCategoryAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateGlossaryCategoryAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.UpdateGlossaryCategoryAsync (categoryGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="categoryGuid"> The globally unique identifier of the category. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the given glossary category by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AtlasGlossaryCategory</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              childrenCategories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the category header.
                  displayText: string, # Optional. The display text.
                  parentCategoryGuid: string, # Optional. The GUID of the parent category.
                  relationGuid: string, # Optional. The GUID of the relationship.
                }
              ], # Optional. An array of children categories.
              parentCategory: AtlasRelatedCategoryHeader, # Optional. The header of the related category.
              terms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGlossaryTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateGlossaryTerm (string termGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateGlossaryTerm(string termGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.UpdateGlossaryTerm(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGlossaryTerm (termGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateGlossaryTerm : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.UpdateGlossaryTerm : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.UpdateGlossaryTerm (termGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Update the given glossary term by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;,
                  typeName: string,
                  lastModifiedTS: string,
                  entityGuid: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  removePropagationsOnEntityDelete: boolean,
                  validityPeriods: [
                    {
                      endTime: string,
                      startTime: string,
                      timeZone: string
                    }
                  ],
                  source: string,
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              longDescription: string,
              name: string,
              qualifiedName: string,
              shortDescription: string,
              lastModifiedTS: string,
              guid: string,
              abbreviation: string,
              templateName: [AnyObject],
              anchor: {
                displayText: string,
                glossaryGuid: string,
                relationGuid: string
              },
              antonyms: [
                {
                  description: string,
                  displayText: string,
                  expression: string,
                  relationGuid: string,
                  source: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER",
                  steward: string,
                  termGuid: string
                }
              ],
              createTime: number,
              createdBy: string,
              updateTime: number,
              updatedBy: string,
              status: "Draft" | "Approved" | "Alert" | "Expired",
              resources: [
                {
                  displayName: string,
                  url: string
                }
              ],
              contacts: Dictionary&lt;string, ContactBasic[]&gt;,
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              assignedEntities: [
                {
                  guid: string,
                  typeName: string,
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;,
                  displayText: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  relationshipType: string,
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;,
                    typeName: string,
                    lastModifiedTS: string
                  },
                  relationshipGuid: string,
                  relationshipStatus: "ACTIVE" | "DELETED"
                }
              ],
              categories: [
                {
                  categoryGuid: string,
                  description: string,
                  displayText: string,
                  relationGuid: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER"
                }
              ],
              classifies: [AtlasRelatedTermHeader],
              examples: [string],
              isA: [AtlasRelatedTermHeader],
              preferredTerms: [AtlasRelatedTermHeader],
              preferredToTerms: [AtlasRelatedTermHeader],
              replacedBy: [AtlasRelatedTermHeader],
              replacementTerms: [AtlasRelatedTermHeader],
              seeAlso: [AtlasRelatedTermHeader],
              synonyms: [AtlasRelatedTermHeader],
              translatedTerms: [AtlasRelatedTermHeader],
              translationTerms: [AtlasRelatedTermHeader],
              usage: string,
              validValues: [AtlasRelatedTermHeader],
              validValuesFor: [AtlasRelatedTermHeader]
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;,
                  typeName: string,
                  lastModifiedTS: string,
                  entityGuid: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  removePropagationsOnEntityDelete: boolean,
                  validityPeriods: [
                    {
                      endTime: string,
                      startTime: string,
                      timeZone: string
                    }
                  ],
                  source: string,
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              longDescription: string,
              name: string,
              qualifiedName: string,
              shortDescription: string,
              lastModifiedTS: string,
              guid: string,
              abbreviation: string,
              templateName: [AnyObject],
              anchor: {
                displayText: string,
                glossaryGuid: string,
                relationGuid: string
              },
              antonyms: [
                {
                  description: string,
                  displayText: string,
                  expression: string,
                  relationGuid: string,
                  source: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER",
                  steward: string,
                  termGuid: string
                }
              ],
              createTime: number,
              createdBy: string,
              updateTime: number,
              updatedBy: string,
              status: "Draft" | "Approved" | "Alert" | "Expired",
              resources: [
                {
                  displayName: string,
                  url: string
                }
              ],
              contacts: Dictionary&lt;string, ContactBasic[]&gt;,
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              assignedEntities: [
                {
                  guid: string,
                  typeName: string,
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;,
                  displayText: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  relationshipType: string,
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;,
                    typeName: string,
                    lastModifiedTS: string
                  },
                  relationshipGuid: string,
                  relationshipStatus: "ACTIVE" | "DELETED"
                }
              ],
              categories: [
                {
                  categoryGuid: string,
                  description: string,
                  displayText: string,
                  relationGuid: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER"
                }
              ],
              classifies: [AtlasRelatedTermHeader],
              examples: [string],
              isA: [AtlasRelatedTermHeader],
              preferredTerms: [AtlasRelatedTermHeader],
              preferredToTerms: [AtlasRelatedTermHeader],
              replacedBy: [AtlasRelatedTermHeader],
              replacementTerms: [AtlasRelatedTermHeader],
              seeAlso: [AtlasRelatedTermHeader],
              synonyms: [AtlasRelatedTermHeader],
              translatedTerms: [AtlasRelatedTermHeader],
              translationTerms: [AtlasRelatedTermHeader],
              usage: string,
              validValues: [AtlasRelatedTermHeader],
              validValuesFor: [AtlasRelatedTermHeader]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGlossaryTerm">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateGlossaryTerm (string termGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateGlossaryTerm(string termGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.UpdateGlossaryTerm(System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGlossaryTerm (termGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateGlossaryTerm : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response&#xA;override this.UpdateGlossaryTerm : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; Azure.Response" Usage="purviewGlossaries.UpdateGlossaryTerm (termGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the given glossary term by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGlossaryTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateGlossaryTermAsync (string termGuid, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateGlossaryTermAsync(string termGuid, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.UpdateGlossaryTermAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGlossaryTermAsync (termGuid As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateGlossaryTermAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateGlossaryTermAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.UpdateGlossaryTermAsync (termGuid, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Update the given glossary term by its GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;,
                  typeName: string,
                  lastModifiedTS: string,
                  entityGuid: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  removePropagationsOnEntityDelete: boolean,
                  validityPeriods: [
                    {
                      endTime: string,
                      startTime: string,
                      timeZone: string
                    }
                  ],
                  source: string,
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              longDescription: string,
              name: string,
              qualifiedName: string,
              shortDescription: string,
              lastModifiedTS: string,
              guid: string,
              abbreviation: string,
              templateName: [AnyObject],
              anchor: {
                displayText: string,
                glossaryGuid: string,
                relationGuid: string
              },
              antonyms: [
                {
                  description: string,
                  displayText: string,
                  expression: string,
                  relationGuid: string,
                  source: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER",
                  steward: string,
                  termGuid: string
                }
              ],
              createTime: number,
              createdBy: string,
              updateTime: number,
              updatedBy: string,
              status: "Draft" | "Approved" | "Alert" | "Expired",
              resources: [
                {
                  displayName: string,
                  url: string
                }
              ],
              contacts: Dictionary&lt;string, ContactBasic[]&gt;,
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              assignedEntities: [
                {
                  guid: string,
                  typeName: string,
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;,
                  displayText: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  relationshipType: string,
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;,
                    typeName: string,
                    lastModifiedTS: string
                  },
                  relationshipGuid: string,
                  relationshipStatus: "ACTIVE" | "DELETED"
                }
              ],
              categories: [
                {
                  categoryGuid: string,
                  description: string,
                  displayText: string,
                  relationGuid: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER"
                }
              ],
              classifies: [AtlasRelatedTermHeader],
              examples: [string],
              isA: [AtlasRelatedTermHeader],
              preferredTerms: [AtlasRelatedTermHeader],
              preferredToTerms: [AtlasRelatedTermHeader],
              replacedBy: [AtlasRelatedTermHeader],
              replacementTerms: [AtlasRelatedTermHeader],
              seeAlso: [AtlasRelatedTermHeader],
              synonyms: [AtlasRelatedTermHeader],
              translatedTerms: [AtlasRelatedTermHeader],
              translationTerms: [AtlasRelatedTermHeader],
              usage: string,
              validValues: [AtlasRelatedTermHeader],
              validValuesFor: [AtlasRelatedTermHeader]
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;,
                  typeName: string,
                  lastModifiedTS: string,
                  entityGuid: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  removePropagationsOnEntityDelete: boolean,
                  validityPeriods: [
                    {
                      endTime: string,
                      startTime: string,
                      timeZone: string
                    }
                  ],
                  source: string,
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              longDescription: string,
              name: string,
              qualifiedName: string,
              shortDescription: string,
              lastModifiedTS: string,
              guid: string,
              abbreviation: string,
              templateName: [AnyObject],
              anchor: {
                displayText: string,
                glossaryGuid: string,
                relationGuid: string
              },
              antonyms: [
                {
                  description: string,
                  displayText: string,
                  expression: string,
                  relationGuid: string,
                  source: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER",
                  steward: string,
                  termGuid: string
                }
              ],
              createTime: number,
              createdBy: string,
              updateTime: number,
              updatedBy: string,
              status: "Draft" | "Approved" | "Alert" | "Expired",
              resources: [
                {
                  displayName: string,
                  url: string
                }
              ],
              contacts: Dictionary&lt;string, ContactBasic[]&gt;,
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              assignedEntities: [
                {
                  guid: string,
                  typeName: string,
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;,
                  displayText: string,
                  entityStatus: "ACTIVE" | "DELETED",
                  relationshipType: string,
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;,
                    typeName: string,
                    lastModifiedTS: string
                  },
                  relationshipGuid: string,
                  relationshipStatus: "ACTIVE" | "DELETED"
                }
              ],
              categories: [
                {
                  categoryGuid: string,
                  description: string,
                  displayText: string,
                  relationGuid: string,
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER"
                }
              ],
              classifies: [AtlasRelatedTermHeader],
              examples: [string],
              isA: [AtlasRelatedTermHeader],
              preferredTerms: [AtlasRelatedTermHeader],
              preferredToTerms: [AtlasRelatedTermHeader],
              replacedBy: [AtlasRelatedTermHeader],
              replacementTerms: [AtlasRelatedTermHeader],
              seeAlso: [AtlasRelatedTermHeader],
              synonyms: [AtlasRelatedTermHeader],
              translatedTerms: [AtlasRelatedTermHeader],
              translationTerms: [AtlasRelatedTermHeader],
              usage: string,
              validValues: [AtlasRelatedTermHeader],
              validValuesFor: [AtlasRelatedTermHeader]
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              requestId: string,
              errorCode: string,
              errorMessage: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateGlossaryTermAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateGlossaryTermAsync (string termGuid, Azure.Core.RequestContent content, bool? includeTermHierarchy = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateGlossaryTermAsync(string termGuid, class Azure.Core.RequestContent content, valuetype System.Nullable`1&lt;bool&gt; includeTermHierarchy, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewGlossaries.UpdateGlossaryTermAsync(System.String,Azure.Core.RequestContent,System.Nullable{System.Boolean},Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateGlossaryTermAsync (termGuid As String, content As RequestContent, Optional includeTermHierarchy As Nullable(Of Boolean) = Nothing, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateGlossaryTermAsync : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateGlossaryTermAsync : string * Azure.Core.RequestContent * Nullable&lt;bool&gt; * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewGlossaries.UpdateGlossaryTermAsync (termGuid, content, includeTermHierarchy, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="termGuid" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="includeTermHierarchy" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="termGuid"> The globally unique identifier for glossary term. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="includeTermHierarchy"> Whether include term hierarchy. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Update the given glossary term by its GUID. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code>
            
            Response Body:
            
            Schema for <c>AtlasGlossaryTerm</c>:
            <code>{
              classifications: [
                {
                  attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                  typeName: string, # Optional. The name of the type.
                  lastModifiedTS: string, # Optional. ETag for concurrency control.
                  entityGuid: string, # Optional. The GUID of the entity.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  removePropagationsOnEntityDelete: boolean, # Optional. Determines if propagations will be removed on entity deletion.
                  validityPeriods: [
                    {
                      endTime: string, # Optional. The end of the time boundary.
                      startTime: string, # Optional. The start of the time boundary.
                      timeZone: string, # Optional. The timezone of the time boundary.
                    }
                  ], # Optional. An array of time boundaries indicating validity periods.
                  source: string, # Optional. indicate the source who create the classification detail
                  sourceDetails: Dictionary&lt;string, AnyObject&gt;, # Optional. more detail on source information
                }
              ], # Optional. An array of classifications.
              longDescription: string, # Optional. The long version description.
              name: string, # Optional. The name of the glossary object.
              qualifiedName: string, # Optional. The qualified name of the glossary object.
              shortDescription: string, # Optional. The short version of description.
              lastModifiedTS: string, # Optional. ETag for concurrency control.
              guid: string, # Optional. The GUID of the object.
              abbreviation: string, # Optional. The abbreviation of the term.
              templateName: [AnyObject], # Optional.
              anchor: {
                displayText: string, # Optional. The display text.
                glossaryGuid: string, # Optional. The GUID of the glossary.
                relationGuid: string, # Optional. The GUID of the relationship.
              }, # Optional. The glossary header with basic information.
              antonyms: [
                {
                  description: string, # Optional. The description of the related term.
                  displayText: string, # Optional. The display text.
                  expression: string, # Optional. The expression of the term.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  source: string, # Optional. The source of the term.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                  steward: string, # Optional. The steward of the term.
                  termGuid: string, # Optional. The GUID of the term.
                }
              ], # Optional. An array of related term headers as antonyms.
              createTime: number, # Optional. The created time of the record.
              createdBy: string, # Optional. The user who created the record.
              updateTime: number, # Optional. The update time of the record.
              updatedBy: string, # Optional. The user who updated the record.
              status: "Draft" | "Approved" | "Alert" | "Expired", # Optional. Status of the AtlasGlossaryTerm
              resources: [
                {
                  displayName: string, # Optional. Display name for url.
                  url: string, # Optional. web url. http or https
                }
              ], # Optional. An array of resource link for term
              contacts: Dictionary&lt;string, ContactBasic[]&gt;, # Optional. The dictionary of contacts for terms. Key could be Expert or Steward.
              attributes: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;, # Optional. The custom attributes of the term, which is map&lt;string,map&lt;string,object&gt;&gt;.
            The key of the first layer map is term template name.
              assignedEntities: [
                {
                  guid: string, # Optional. The GUID of the object.
                  typeName: string, # Optional. The name of the type.
                  uniqueAttributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The unique attributes of the object.
                  displayText: string, # Optional. The display text.
                  entityStatus: "ACTIVE" | "DELETED", # Optional. Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.
                  relationshipType: string, # Optional.
                  relationshipAttributes: {
                    attributes: Dictionary&lt;string, AnyObject&gt;, # Optional. The attributes of the struct.
                    typeName: string, # Optional. The name of the type.
                    lastModifiedTS: string, # Optional. ETag for concurrency control.
                  }, # Optional. Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.
                  relationshipGuid: string, # Optional. The GUID of the relationship.
                  relationshipStatus: "ACTIVE" | "DELETED", # Optional. The enum of relationship status.
                }
              ], # Optional. An array of related object IDs.
              categories: [
                {
                  categoryGuid: string, # Optional. The GUID of the category.
                  description: string, # Optional. The description of the record.
                  displayText: string, # Optional. The display text.
                  relationGuid: string, # Optional. The GUID of the relationship.
                  status: "DRAFT" | "ACTIVE" | "DEPRECATED" | "OBSOLETE" | "OTHER", # Optional. The status of term relationship.
                }
              ], # Optional. An array of term categorization headers.
              classifies: [AtlasRelatedTermHeader], # Optional. An array of related term headers.
              examples: [string], # Optional. An array of examples.
              isA: [AtlasRelatedTermHeader], # Optional. An array of related term headers indicating the is-a relationship.
              preferredTerms: [AtlasRelatedTermHeader], # Optional. An array of preferred related term headers.
              preferredToTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are preferred to.
              replacedBy: [AtlasRelatedTermHeader], # Optional. An array of related term headers that are replaced by.
              replacementTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for replacement.
              seeAlso: [AtlasRelatedTermHeader], # Optional. An array of related term headers for see also.
              synonyms: [AtlasRelatedTermHeader], # Optional. An array of related term headers as synonyms.
              translatedTerms: [AtlasRelatedTermHeader], # Optional. An array of translated related term headers.
              translationTerms: [AtlasRelatedTermHeader], # Optional. An array of related term headers for translation.
              usage: string, # Optional. The usage of the term.
              validValues: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values.
              validValuesFor: [AtlasRelatedTermHeader], # Optional. An array of related term headers as valid values for other records.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="termGuid" /> or <paramref name="content" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="termGuid" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
