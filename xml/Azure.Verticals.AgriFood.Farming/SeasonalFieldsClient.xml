<Type Name="SeasonalFieldsClient" FullName="Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient">
  <TypeSignature Language="C#" Value="public class SeasonalFieldsClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SeasonalFieldsClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient" />
  <TypeSignature Language="VB.NET" Value="Public Class SeasonalFieldsClient" />
  <TypeSignature Language="F#" Value="type SeasonalFieldsClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The SeasonalFields service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SeasonalFieldsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of SeasonalFieldsClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SeasonalFieldsClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient" Usage="new Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of SeasonalFieldsClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SeasonalFieldsClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As FarmBeatsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient : Uri * Azure.Core.TokenCredential * Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions -&gt; Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient" Usage="new Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of SeasonalFieldsClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCascadeDeleteJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateCascadeDeleteJob (string jobId, string farmerId, string seasonalFieldId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateCascadeDeleteJob(string jobId, string farmerId, string seasonalFieldId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.CreateCascadeDeleteJob(System.String,System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCascadeDeleteJob (jobId As String, farmerId As String, seasonalFieldId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateCascadeDeleteJob : string * string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateCascadeDeleteJob : string * string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="seasonalFieldsClient.CreateCascadeDeleteJob (jobId, farmerId, seasonalFieldId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="jobId"> Job ID supplied by end user. </param>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonalField to be deleted. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Create a cascade delete job for specified seasonal field. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCascadeDeleteJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Operation&lt;BinaryData&gt; CreateCascadeDeleteJob (Azure.WaitUntil waitUntil, string jobId, string farmerId, string seasonalFieldId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Operation`1&lt;class System.BinaryData&gt; CreateCascadeDeleteJob(valuetype Azure.WaitUntil waitUntil, string jobId, string farmerId, string seasonalFieldId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.CreateCascadeDeleteJob(Azure.WaitUntil,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCascadeDeleteJob (waitUntil As WaitUntil, jobId As String, farmerId As String, seasonalFieldId As String, Optional context As RequestContext = Nothing) As Operation(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member CreateCascadeDeleteJob : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;&#xA;override this.CreateCascadeDeleteJob : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;" Usage="seasonalFieldsClient.CreateCascadeDeleteJob (waitUntil, jobId, farmerId, seasonalFieldId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Operation&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="jobId"> Job ID supplied by end user. </param>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonalField to be deleted. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Create a cascade delete job for specified seasonal field. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>CascadeDeleteJob</c>:
            <code>{
              farmerId: string, # Required. Farmer ID.
              resourceId: string, # Required. The id of the resource.
              resourceType: string, # Required. The type of the resource.
              id: string, # Optional. Unique job id.
              status: string, # Optional. Status of the job.
            Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
              durationInSeconds: number, # Optional. Duration of the job in seconds.
              message: string, # Optional. Status message to capture more details of the job.
              createdDateTime: string (ISO 8601 Format), # Optional. Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              lastActionDateTime: string (ISO 8601 Format), # Optional. Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              startTime: string (ISO 8601 Format), # Optional. Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              endTime: string (ISO 8601 Format), # Optional. Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" />, <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCascadeDeleteJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateCascadeDeleteJobAsync (string jobId, string farmerId, string seasonalFieldId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateCascadeDeleteJobAsync(string jobId, string farmerId, string seasonalFieldId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.CreateCascadeDeleteJobAsync(System.String,System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCascadeDeleteJobAsync (jobId As String, farmerId As String, seasonalFieldId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateCascadeDeleteJobAsync : string * string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateCascadeDeleteJobAsync : string * string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.CreateCascadeDeleteJobAsync (jobId, farmerId, seasonalFieldId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="jobId"> Job ID supplied by end user. </param>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonalField to be deleted. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Create a cascade delete job for specified seasonal field. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCascadeDeleteJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt; CreateCascadeDeleteJobAsync (Azure.WaitUntil waitUntil, string jobId, string farmerId, string seasonalFieldId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Operation`1&lt;class System.BinaryData&gt;&gt; CreateCascadeDeleteJobAsync(valuetype Azure.WaitUntil waitUntil, string jobId, string farmerId, string seasonalFieldId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.CreateCascadeDeleteJobAsync(Azure.WaitUntil,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCascadeDeleteJobAsync (waitUntil As WaitUntil, jobId As String, farmerId As String, seasonalFieldId As String, Optional context As RequestContext = Nothing) As Task(Of Operation(Of BinaryData))" />
      <MemberSignature Language="F#" Value="abstract member CreateCascadeDeleteJobAsync : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;&#xA;override this.CreateCascadeDeleteJobAsync : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;" Usage="seasonalFieldsClient.CreateCascadeDeleteJobAsync (waitUntil, jobId, farmerId, seasonalFieldId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Operation&lt;System.BinaryData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="jobId"> Job ID supplied by end user. </param>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonalField to be deleted. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Create a cascade delete job for specified seasonal field. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>CascadeDeleteJob</c>:
            <code>{
              farmerId: string, # Required. Farmer ID.
              resourceId: string, # Required. The id of the resource.
              resourceType: string, # Required. The type of the resource.
              id: string, # Optional. Unique job id.
              status: string, # Optional. Status of the job.
            Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
              durationInSeconds: number, # Optional. Duration of the job in seconds.
              message: string, # Optional. Status message to capture more details of the job.
              createdDateTime: string (ISO 8601 Format), # Optional. Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              lastActionDateTime: string (ISO 8601 Format), # Optional. Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              startTime: string (ISO 8601 Format), # Optional. Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              endTime: string (ISO 8601 Format), # Optional. Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" />, <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdate (string farmerId, string seasonalFieldId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdate(string farmerId, string seasonalFieldId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.CreateOrUpdate(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (farmerId As String, seasonalFieldId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="seasonalFieldsClient.CreateOrUpdate (farmerId, seasonalFieldId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer resource. </param>
        <param name="seasonalFieldId"> ID of the seasonal field resource. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Creates or Updates a seasonal field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>SeasonalField</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code>
            
            Response Body:
            
            Schema for <c>SeasonalField</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdate (string farmerId, string seasonalFieldId, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdate(string farmerId, string seasonalFieldId, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.CreateOrUpdate(System.String,System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (farmerId As String, seasonalFieldId As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="seasonalFieldsClient.CreateOrUpdate (farmerId, seasonalFieldId, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer resource. </param>
        <param name="seasonalFieldId"> ID of the seasonal field resource. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Creates or Updates a seasonal field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>farmerId</term><term>string</term><term /><term> Farmer ID. </term></item><item><term>primaryBoundaryId</term><term>string</term><term /><term> Primary boundary id. </term></item><item><term>boundaryIds</term><term>string[]</term><term /><term> Boundary Ids. </term></item><item><term>farmId</term><term>string</term><term /><term> ID of the associated Farm. </term></item><item><term>fieldId</term><term>string</term><term /><term> ID of the associated Field. </term></item><item><term>seasonId</term><term>string</term><term /><term> ID of the season it belongs to. </term></item><item><term>cropVarietyIds</term><term>string[]</term><term /><term> CropVariety ids. </term></item><item><term>cropId</term><term>string</term><term /><term> ID of the crop it belongs to. </term></item><item><term>avgYieldValue</term><term>number</term><term /><term> Average yield value of the seasonal field. </term></item><item><term>avgYieldUnit</term><term>string</term><term /><term> Unit of the average yield value attribute. </term></item><item><term>avgSeedPopulationValue</term><term>number</term><term /><term> Average seed population value of the seasonal field. </term></item><item><term>avgSeedPopulationUnit</term><term>string</term><term /><term> Unit of average seed population value attribute. </term></item><item><term>plantingDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>id</term><term>string</term><term /><term> Unique resource ID. </term></item><item><term>eTag</term><term>string</term><term /><term> The ETag value to implement optimistic concurrency. </term></item><item><term>status</term><term>string</term><term /><term> Status of the resource. </term></item><item><term>createdDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>modifiedDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>name</term><term>string</term><term /><term> Name to identify resource. </term></item><item><term>description</term><term>string</term><term /><term> Textual description of the resource. </term></item><item><term>properties</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term>
            A collection of key value pairs that belongs to the resource.
            
            Each pair must not have a key greater than 50 characters
            
            and must not have a value greater than 150 characters.
            
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateAsync (string farmerId, string seasonalFieldId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateAsync(string farmerId, string seasonalFieldId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.CreateOrUpdateAsync(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (farmerId As String, seasonalFieldId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.CreateOrUpdateAsync (farmerId, seasonalFieldId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer resource. </param>
        <param name="seasonalFieldId"> ID of the seasonal field resource. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Creates or Updates a seasonal field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>SeasonalField</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code>
            
            Response Body:
            
            Schema for <c>SeasonalField</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateAsync (string farmerId, string seasonalFieldId, Azure.Core.RequestContent requestBody, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateAsync(string farmerId, string seasonalFieldId, class Azure.Core.RequestContent requestBody, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.CreateOrUpdateAsync(System.String,System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (farmerId As String, seasonalFieldId As String, requestBody As RequestContent, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.CreateOrUpdateAsync (farmerId, seasonalFieldId, requestBody, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="requestBody" Type="Azure.Core.RequestContent" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer resource. </param>
        <param name="seasonalFieldId"> ID of the seasonal field resource. </param>
        <param name="requestBody"> The request body. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Creates or Updates a seasonal field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <list type="table"><listeader><term>Name</term><term>Type</term><term>Required</term><term>Description</term></listeader><item><term>farmerId</term><term>string</term><term /><term> Farmer ID. </term></item><item><term>primaryBoundaryId</term><term>string</term><term /><term> Primary boundary id. </term></item><item><term>boundaryIds</term><term>string[]</term><term /><term> Boundary Ids. </term></item><item><term>farmId</term><term>string</term><term /><term> ID of the associated Farm. </term></item><item><term>fieldId</term><term>string</term><term /><term> ID of the associated Field. </term></item><item><term>seasonId</term><term>string</term><term /><term> ID of the season it belongs to. </term></item><item><term>cropVarietyIds</term><term>string[]</term><term /><term> CropVariety ids. </term></item><item><term>cropId</term><term>string</term><term /><term> ID of the crop it belongs to. </term></item><item><term>avgYieldValue</term><term>number</term><term /><term> Average yield value of the seasonal field. </term></item><item><term>avgYieldUnit</term><term>string</term><term /><term> Unit of the average yield value attribute. </term></item><item><term>avgSeedPopulationValue</term><term>number</term><term /><term> Average seed population value of the seasonal field. </term></item><item><term>avgSeedPopulationUnit</term><term>string</term><term /><term> Unit of average seed population value attribute. </term></item><item><term>plantingDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>id</term><term>string</term><term /><term> Unique resource ID. </term></item><item><term>eTag</term><term>string</term><term /><term> The ETag value to implement optimistic concurrency. </term></item><item><term>status</term><term>string</term><term /><term> Status of the resource. </term></item><item><term>createdDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>modifiedDateTime</term><term>string (ISO 8601 Format)</term><term /><term> Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ. </term></item><item><term>name</term><term>string</term><term /><term> Name to identify resource. </term></item><item><term>description</term><term>string</term><term /><term> Textual description of the resource. </term></item><item><term>properties</term><term>Dictionary&lt;string, AnyObject&gt;</term><term /><term>
            A collection of key value pairs that belongs to the resource.
            
            Each pair must not have a key greater than 50 characters
            
            and must not have a value greater than 150 characters.
            
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            </term></item></list></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string farmerId, string seasonalFieldId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string farmerId, string seasonalFieldId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.Delete(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (farmerId As String, seasonalFieldId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.Delete : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="seasonalFieldsClient.Delete (farmerId, seasonalFieldId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonal field. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Deletes a specified seasonal-field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string farmerId, string seasonalFieldId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string farmerId, string seasonalFieldId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.Delete(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (farmerId As String, seasonalFieldId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Delete : string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="seasonalFieldsClient.Delete (farmerId, seasonalFieldId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonal field. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Deletes a specified seasonal-field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string farmerId, string seasonalFieldId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string farmerId, string seasonalFieldId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.DeleteAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (farmerId As String, seasonalFieldId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.DeleteAsync (farmerId, seasonalFieldId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonal field. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Deletes a specified seasonal-field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string farmerId, string seasonalFieldId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string farmerId, string seasonalFieldId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.DeleteAsync(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (farmerId As String, seasonalFieldId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.DeleteAsync (farmerId, seasonalFieldId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonal field. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Deletes a specified seasonal-field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Get (string farmerId, string seasonalFieldId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Get(string farmerId, string seasonalFieldId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.Get(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (farmerId As String, seasonalFieldId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Get : string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="seasonalFieldsClient.Get (farmerId, seasonalFieldId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonal field. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Gets a specified seasonal field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetAsync (string farmerId, string seasonalFieldId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetAsync(string farmerId, string seasonalFieldId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetAsync(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (farmerId As String, seasonalFieldId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.GetAsync (farmerId, seasonalFieldId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonal field. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Gets a specified seasonal field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCascadeDeleteJobDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetCascadeDeleteJobDetails (string jobId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetCascadeDeleteJobDetails(string jobId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetCascadeDeleteJobDetails(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCascadeDeleteJobDetails (jobId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetCascadeDeleteJobDetails : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetCascadeDeleteJobDetails : string * Azure.RequestContext -&gt; Azure.Response" Usage="seasonalFieldsClient.GetCascadeDeleteJobDetails (jobId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="jobId"> ID of the job. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Get cascade delete job for specified seasonal field. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>CascadeDeleteJob</c>:
            <code>{
              farmerId: string, # Required. Farmer ID.
              resourceId: string, # Required. The id of the resource.
              resourceType: string, # Required. The type of the resource.
              id: string, # Optional. Unique job id.
              status: string, # Optional. Status of the job.
            Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
              durationInSeconds: number, # Optional. Duration of the job in seconds.
              message: string, # Optional. Status message to capture more details of the job.
              createdDateTime: string (ISO 8601 Format), # Optional. Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              lastActionDateTime: string (ISO 8601 Format), # Optional. Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              startTime: string (ISO 8601 Format), # Optional. Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              endTime: string (ISO 8601 Format), # Optional. Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCascadeDeleteJobDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetCascadeDeleteJobDetails (string jobId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetCascadeDeleteJobDetails(string jobId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetCascadeDeleteJobDetails(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCascadeDeleteJobDetails (jobId As String, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetCascadeDeleteJobDetails : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetCascadeDeleteJobDetails : string * Azure.RequestOptions -&gt; Azure.Response" Usage="seasonalFieldsClient.GetCascadeDeleteJobDetails (jobId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="jobId"> ID of the job. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get cascade delete job for specified seasonal field. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCascadeDeleteJobDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetCascadeDeleteJobDetailsAsync (string jobId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetCascadeDeleteJobDetailsAsync(string jobId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetCascadeDeleteJobDetailsAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCascadeDeleteJobDetailsAsync (jobId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetCascadeDeleteJobDetailsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetCascadeDeleteJobDetailsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.GetCascadeDeleteJobDetailsAsync (jobId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="jobId"> ID of the job. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Get cascade delete job for specified seasonal field. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>CascadeDeleteJob</c>:
            <code>{
              farmerId: string, # Required. Farmer ID.
              resourceId: string, # Required. The id of the resource.
              resourceType: string, # Required. The type of the resource.
              id: string, # Optional. Unique job id.
              status: string, # Optional. Status of the job.
            Possible values: 'Waiting', 'Running', 'Succeeded', 'Failed', 'Cancelled'.
              durationInSeconds: number, # Optional. Duration of the job in seconds.
              message: string, # Optional. Status message to capture more details of the job.
              createdDateTime: string (ISO 8601 Format), # Optional. Job created at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              lastActionDateTime: string (ISO 8601 Format), # Optional. Job was last acted upon at dateTime. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              startTime: string (ISO 8601 Format), # Optional. Job start time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              endTime: string (ISO 8601 Format), # Optional. Job end time when available. Sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCascadeDeleteJobDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetCascadeDeleteJobDetailsAsync (string jobId, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetCascadeDeleteJobDetailsAsync(string jobId, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetCascadeDeleteJobDetailsAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCascadeDeleteJobDetailsAsync (jobId As String, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetCascadeDeleteJobDetailsAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetCascadeDeleteJobDetailsAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.GetCascadeDeleteJobDetailsAsync (jobId, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="jobId"> ID of the job. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Get cascade delete job for specified seasonal field. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeasonalField">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetSeasonalField (string farmerId, string seasonalFieldId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetSeasonalField(string farmerId, string seasonalFieldId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetSeasonalField(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSeasonalField (farmerId As String, seasonalFieldId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetSeasonalField : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetSeasonalField : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="seasonalFieldsClient.GetSeasonalField (farmerId, seasonalFieldId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonal field. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Gets a specified seasonal field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>SeasonalField</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSeasonalFieldAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetSeasonalFieldAsync (string farmerId, string seasonalFieldId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetSeasonalFieldAsync(string farmerId, string seasonalFieldId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetSeasonalFieldAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSeasonalFieldAsync (farmerId As String, seasonalFieldId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetSeasonalFieldAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetSeasonalFieldAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.GetSeasonalFieldAsync (farmerId, seasonalFieldId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="seasonalFieldId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="seasonalFieldId"> ID of the seasonal field. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Gets a specified seasonal field resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>SeasonalField</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="seasonalFieldId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSeasonalFields">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetSeasonalFields (System.Collections.Generic.IEnumerable&lt;string&gt; farmIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; fieldIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; seasonIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropVarietyIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropIds = default, double? minAvgYieldValue = default, double? maxAvgYieldValue = default, string avgYieldUnit = default, double? minAvgSeedPopulationValue = default, double? maxAvgSeedPopulationValue = default, string avgSeedPopulationUnit = default, DateTimeOffset? minPlantingDateTime = default, DateTimeOffset? maxPlantingDateTime = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetSeasonalFields(class System.Collections.Generic.IEnumerable`1&lt;string&gt; farmIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fieldIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; seasonIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropVarietyIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropIds, valuetype System.Nullable`1&lt;float64&gt; minAvgYieldValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgYieldValue, string avgYieldUnit, valuetype System.Nullable`1&lt;float64&gt; minAvgSeedPopulationValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgSeedPopulationValue, string avgSeedPopulationUnit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minPlantingDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxPlantingDateTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetSeasonalFields(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSeasonalFields (Optional farmIds As IEnumerable(Of String) = Nothing, Optional fieldIds As IEnumerable(Of String) = Nothing, Optional seasonIds As IEnumerable(Of String) = Nothing, Optional cropVarietyIds As IEnumerable(Of String) = Nothing, Optional cropIds As IEnumerable(Of String) = Nothing, Optional minAvgYieldValue As Nullable(Of Double) = Nothing, Optional maxAvgYieldValue As Nullable(Of Double) = Nothing, Optional avgYieldUnit As String = Nothing, Optional minAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional maxAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional avgSeedPopulationUnit As String = Nothing, Optional minPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetSeasonalFields : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetSeasonalFields : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="seasonalFieldsClient.GetSeasonalFields (farmIds, fieldIds, seasonIds, cropVarietyIds, cropIds, minAvgYieldValue, maxAvgYieldValue, avgYieldUnit, minAvgSeedPopulationValue, maxAvgSeedPopulationValue, avgSeedPopulationUnit, minPlantingDateTime, maxPlantingDateTime, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="fieldIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="seasonIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropVarietyIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgYieldUnit" Type="System.String" />
        <Parameter Name="minAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgSeedPopulationUnit" Type="System.String" />
        <Parameter Name="minPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmIds"> Farm Ids of the resource. </param>
        <param name="fieldIds"> Field Ids of the resource. </param>
        <param name="seasonIds"> Season Ids of the resource. </param>
        <param name="cropVarietyIds"> CropVarietyIds of the resource. </param>
        <param name="cropIds"> Ids of the crop it belongs to. </param>
        <param name="minAvgYieldValue"> Minimum average yield value of the seasonal field(inclusive). </param>
        <param name="maxAvgYieldValue"> Maximum average yield value of the seasonal field(inclusive). </param>
        <param name="avgYieldUnit"> Unit of the average yield value attribute. </param>
        <param name="minAvgSeedPopulationValue"> Minimum average seed population value of the seasonal field(inclusive). </param>
        <param name="maxAvgSeedPopulationValue"> Maximum average seed population value of the seasonal field(inclusive). </param>
        <param name="avgSeedPopulationUnit"> Unit of average seed population value attribute. </param>
        <param name="minPlantingDateTime"> Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="maxPlantingDateTime"> Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns a paginated list of seasonal field resources across all farmers. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>SeasonalFieldListResponseValue</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeasonalFieldsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetSeasonalFieldsAsync (System.Collections.Generic.IEnumerable&lt;string&gt; farmIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; fieldIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; seasonIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropVarietyIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropIds = default, double? minAvgYieldValue = default, double? maxAvgYieldValue = default, string avgYieldUnit = default, double? minAvgSeedPopulationValue = default, double? maxAvgSeedPopulationValue = default, string avgSeedPopulationUnit = default, DateTimeOffset? minPlantingDateTime = default, DateTimeOffset? maxPlantingDateTime = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetSeasonalFieldsAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; farmIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fieldIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; seasonIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropVarietyIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropIds, valuetype System.Nullable`1&lt;float64&gt; minAvgYieldValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgYieldValue, string avgYieldUnit, valuetype System.Nullable`1&lt;float64&gt; minAvgSeedPopulationValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgSeedPopulationValue, string avgSeedPopulationUnit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minPlantingDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxPlantingDateTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetSeasonalFieldsAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSeasonalFieldsAsync (Optional farmIds As IEnumerable(Of String) = Nothing, Optional fieldIds As IEnumerable(Of String) = Nothing, Optional seasonIds As IEnumerable(Of String) = Nothing, Optional cropVarietyIds As IEnumerable(Of String) = Nothing, Optional cropIds As IEnumerable(Of String) = Nothing, Optional minAvgYieldValue As Nullable(Of Double) = Nothing, Optional maxAvgYieldValue As Nullable(Of Double) = Nothing, Optional avgYieldUnit As String = Nothing, Optional minAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional maxAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional avgSeedPopulationUnit As String = Nothing, Optional minPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetSeasonalFieldsAsync : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetSeasonalFieldsAsync : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="seasonalFieldsClient.GetSeasonalFieldsAsync (farmIds, fieldIds, seasonIds, cropVarietyIds, cropIds, minAvgYieldValue, maxAvgYieldValue, avgYieldUnit, minAvgSeedPopulationValue, maxAvgSeedPopulationValue, avgSeedPopulationUnit, minPlantingDateTime, maxPlantingDateTime, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="fieldIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="seasonIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropVarietyIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgYieldUnit" Type="System.String" />
        <Parameter Name="minAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgSeedPopulationUnit" Type="System.String" />
        <Parameter Name="minPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmIds"> Farm Ids of the resource. </param>
        <param name="fieldIds"> Field Ids of the resource. </param>
        <param name="seasonIds"> Season Ids of the resource. </param>
        <param name="cropVarietyIds"> CropVarietyIds of the resource. </param>
        <param name="cropIds"> Ids of the crop it belongs to. </param>
        <param name="minAvgYieldValue"> Minimum average yield value of the seasonal field(inclusive). </param>
        <param name="maxAvgYieldValue"> Maximum average yield value of the seasonal field(inclusive). </param>
        <param name="avgYieldUnit"> Unit of the average yield value attribute. </param>
        <param name="minAvgSeedPopulationValue"> Minimum average seed population value of the seasonal field(inclusive). </param>
        <param name="maxAvgSeedPopulationValue"> Maximum average seed population value of the seasonal field(inclusive). </param>
        <param name="avgSeedPopulationUnit"> Unit of average seed population value attribute. </param>
        <param name="minPlantingDateTime"> Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="maxPlantingDateTime"> Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns a paginated list of seasonal field resources across all farmers. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>SeasonalFieldListResponseValue</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeasonalFieldsByFarmerId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetSeasonalFieldsByFarmerId (string farmerId, System.Collections.Generic.IEnumerable&lt;string&gt; farmIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; fieldIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; seasonIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropVarietyIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropIds = default, double? minAvgYieldValue = default, double? maxAvgYieldValue = default, string avgYieldUnit = default, double? minAvgSeedPopulationValue = default, double? maxAvgSeedPopulationValue = default, string avgSeedPopulationUnit = default, DateTimeOffset? minPlantingDateTime = default, DateTimeOffset? maxPlantingDateTime = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetSeasonalFieldsByFarmerId(string farmerId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; farmIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fieldIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; seasonIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropVarietyIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropIds, valuetype System.Nullable`1&lt;float64&gt; minAvgYieldValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgYieldValue, string avgYieldUnit, valuetype System.Nullable`1&lt;float64&gt; minAvgSeedPopulationValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgSeedPopulationValue, string avgSeedPopulationUnit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minPlantingDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxPlantingDateTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetSeasonalFieldsByFarmerId(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSeasonalFieldsByFarmerId (farmerId As String, Optional farmIds As IEnumerable(Of String) = Nothing, Optional fieldIds As IEnumerable(Of String) = Nothing, Optional seasonIds As IEnumerable(Of String) = Nothing, Optional cropVarietyIds As IEnumerable(Of String) = Nothing, Optional cropIds As IEnumerable(Of String) = Nothing, Optional minAvgYieldValue As Nullable(Of Double) = Nothing, Optional maxAvgYieldValue As Nullable(Of Double) = Nothing, Optional avgYieldUnit As String = Nothing, Optional minAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional maxAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional avgSeedPopulationUnit As String = Nothing, Optional minPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetSeasonalFieldsByFarmerId : string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetSeasonalFieldsByFarmerId : string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="seasonalFieldsClient.GetSeasonalFieldsByFarmerId (farmerId, farmIds, fieldIds, seasonIds, cropVarietyIds, cropIds, minAvgYieldValue, maxAvgYieldValue, avgYieldUnit, minAvgSeedPopulationValue, maxAvgSeedPopulationValue, avgSeedPopulationUnit, minPlantingDateTime, maxPlantingDateTime, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="farmIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="fieldIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="seasonIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropVarietyIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgYieldUnit" Type="System.String" />
        <Parameter Name="minAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgSeedPopulationUnit" Type="System.String" />
        <Parameter Name="minPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="farmIds"> Farm Ids of the resource. </param>
        <param name="fieldIds"> Field Ids of the resource. </param>
        <param name="seasonIds"> Season Ids of the resource. </param>
        <param name="cropVarietyIds"> CropVarietyIds of the resource. </param>
        <param name="cropIds"> Ids of the crop it belongs to. </param>
        <param name="minAvgYieldValue"> Minimum average yield value of the seasonal field(inclusive). </param>
        <param name="maxAvgYieldValue"> Maximum average yield value of the seasonal field(inclusive). </param>
        <param name="avgYieldUnit"> Unit of the average yield value attribute. </param>
        <param name="minAvgSeedPopulationValue"> Minimum average seed population value of the seasonal field(inclusive). </param>
        <param name="maxAvgSeedPopulationValue"> Maximum average seed population value of the seasonal field(inclusive). </param>
        <param name="avgSeedPopulationUnit"> Unit of average seed population value attribute. </param>
        <param name="minPlantingDateTime"> Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="maxPlantingDateTime"> Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns a paginated list of seasonal field resources under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>SeasonalFieldListResponseValue</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSeasonalFieldsByFarmerIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetSeasonalFieldsByFarmerIdAsync (string farmerId, System.Collections.Generic.IEnumerable&lt;string&gt; farmIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; fieldIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; seasonIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropVarietyIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropIds = default, double? minAvgYieldValue = default, double? maxAvgYieldValue = default, string avgYieldUnit = default, double? minAvgSeedPopulationValue = default, double? maxAvgSeedPopulationValue = default, string avgSeedPopulationUnit = default, DateTimeOffset? minPlantingDateTime = default, DateTimeOffset? maxPlantingDateTime = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetSeasonalFieldsByFarmerIdAsync(string farmerId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; farmIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fieldIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; seasonIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropVarietyIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropIds, valuetype System.Nullable`1&lt;float64&gt; minAvgYieldValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgYieldValue, string avgYieldUnit, valuetype System.Nullable`1&lt;float64&gt; minAvgSeedPopulationValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgSeedPopulationValue, string avgSeedPopulationUnit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minPlantingDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxPlantingDateTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.GetSeasonalFieldsByFarmerIdAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSeasonalFieldsByFarmerIdAsync (farmerId As String, Optional farmIds As IEnumerable(Of String) = Nothing, Optional fieldIds As IEnumerable(Of String) = Nothing, Optional seasonIds As IEnumerable(Of String) = Nothing, Optional cropVarietyIds As IEnumerable(Of String) = Nothing, Optional cropIds As IEnumerable(Of String) = Nothing, Optional minAvgYieldValue As Nullable(Of Double) = Nothing, Optional maxAvgYieldValue As Nullable(Of Double) = Nothing, Optional avgYieldUnit As String = Nothing, Optional minAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional maxAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional avgSeedPopulationUnit As String = Nothing, Optional minPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetSeasonalFieldsByFarmerIdAsync : string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetSeasonalFieldsByFarmerIdAsync : string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="seasonalFieldsClient.GetSeasonalFieldsByFarmerIdAsync (farmerId, farmIds, fieldIds, seasonIds, cropVarietyIds, cropIds, minAvgYieldValue, maxAvgYieldValue, avgYieldUnit, minAvgSeedPopulationValue, maxAvgSeedPopulationValue, avgSeedPopulationUnit, minPlantingDateTime, maxPlantingDateTime, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="farmIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="fieldIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="seasonIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropVarietyIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgYieldUnit" Type="System.String" />
        <Parameter Name="minAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgSeedPopulationUnit" Type="System.String" />
        <Parameter Name="minPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="farmIds"> Farm Ids of the resource. </param>
        <param name="fieldIds"> Field Ids of the resource. </param>
        <param name="seasonIds"> Season Ids of the resource. </param>
        <param name="cropVarietyIds"> CropVarietyIds of the resource. </param>
        <param name="cropIds"> Ids of the crop it belongs to. </param>
        <param name="minAvgYieldValue"> Minimum average yield value of the seasonal field(inclusive). </param>
        <param name="maxAvgYieldValue"> Maximum average yield value of the seasonal field(inclusive). </param>
        <param name="avgYieldUnit"> Unit of the average yield value attribute. </param>
        <param name="minAvgSeedPopulationValue"> Minimum average seed population value of the seasonal field(inclusive). </param>
        <param name="maxAvgSeedPopulationValue"> Maximum average seed population value of the seasonal field(inclusive). </param>
        <param name="avgSeedPopulationUnit"> Unit of average seed population value attribute. </param>
        <param name="minPlantingDateTime"> Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="maxPlantingDateTime"> Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns a paginated list of seasonal field resources under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>SeasonalFieldListResponseValue</c>:
            <code>{
              farmerId: string, # Optional. Farmer ID.
              primaryBoundaryId: string, # Optional. Primary boundary id.
              boundaryIds: [string], # Optional. Boundary Ids.
              farmId: string, # Optional. ID of the associated Farm.
              fieldId: string, # Optional. ID of the associated Field.
              seasonId: string, # Optional. ID of the season it belongs to.
              cropVarietyIds: [string], # Optional. CropVariety ids.
              cropId: string, # Optional. ID of the crop it belongs to.
              avgYieldValue: number, # Optional. Average yield value of the seasonal field.
              avgYieldUnit: string, # Optional. Unit of the average yield value attribute.
              avgSeedPopulationValue: number, # Optional. Average seed population value of the seasonal field.
              avgSeedPopulationUnit: string, # Optional. Unit of average seed population value attribute.
              plantingDateTime: string (ISO 8601 Format), # Optional. Planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual Azure.Response List (System.Collections.Generic.IEnumerable&lt;string&gt; farmIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; fieldIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; seasonIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropVarietyIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropIds = default, double? minAvgYieldValue = default, double? maxAvgYieldValue = default, string avgYieldUnit = default, double? minAvgSeedPopulationValue = default, double? maxAvgSeedPopulationValue = default, string avgSeedPopulationUnit = default, DateTimeOffset? minPlantingDateTime = default, DateTimeOffset? maxPlantingDateTime = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response List(class System.Collections.Generic.IEnumerable`1&lt;string&gt; farmIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fieldIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; seasonIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropVarietyIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropIds, valuetype System.Nullable`1&lt;float64&gt; minAvgYieldValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgYieldValue, string avgYieldUnit, valuetype System.Nullable`1&lt;float64&gt; minAvgSeedPopulationValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgSeedPopulationValue, string avgSeedPopulationUnit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minPlantingDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxPlantingDateTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.List(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function List (Optional farmIds As IEnumerable(Of String) = Nothing, Optional fieldIds As IEnumerable(Of String) = Nothing, Optional seasonIds As IEnumerable(Of String) = Nothing, Optional cropVarietyIds As IEnumerable(Of String) = Nothing, Optional cropIds As IEnumerable(Of String) = Nothing, Optional minAvgYieldValue As Nullable(Of Double) = Nothing, Optional maxAvgYieldValue As Nullable(Of Double) = Nothing, Optional avgYieldUnit As String = Nothing, Optional minAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional maxAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional avgSeedPopulationUnit As String = Nothing, Optional minPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member List : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.List : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; Azure.Response" Usage="seasonalFieldsClient.List (farmIds, fieldIds, seasonIds, cropVarietyIds, cropIds, minAvgYieldValue, maxAvgYieldValue, avgYieldUnit, minAvgSeedPopulationValue, maxAvgSeedPopulationValue, avgSeedPopulationUnit, minPlantingDateTime, maxPlantingDateTime, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="fieldIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="seasonIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropVarietyIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgYieldUnit" Type="System.String" />
        <Parameter Name="minAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgSeedPopulationUnit" Type="System.String" />
        <Parameter Name="minPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmIds"> Farm Ids of the resource. </param>
        <param name="fieldIds"> Field Ids of the resource. </param>
        <param name="seasonIds"> Season Ids of the resource. </param>
        <param name="cropVarietyIds"> CropVarietyIds of the resource. </param>
        <param name="cropIds"> Ids of the crop it belongs to. </param>
        <param name="minAvgYieldValue"> Minimum average yield value of the seasonal field(inclusive). </param>
        <param name="maxAvgYieldValue"> Maximum average yield value of the seasonal field(inclusive). </param>
        <param name="avgYieldUnit"> Unit of the average yield value attribute. </param>
        <param name="minAvgSeedPopulationValue"> Minimum average seed population value of the seasonal field(inclusive). </param>
        <param name="maxAvgSeedPopulationValue"> Maximum average seed population value of the seasonal field(inclusive). </param>
        <param name="avgSeedPopulationUnit"> Unit of average seed population value attribute. </param>
        <param name="minPlantingDateTime"> Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="maxPlantingDateTime"> Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Returns a paginated list of seasonal field resources across all farmers. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ListAsync (System.Collections.Generic.IEnumerable&lt;string&gt; farmIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; fieldIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; seasonIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropVarietyIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropIds = default, double? minAvgYieldValue = default, double? maxAvgYieldValue = default, string avgYieldUnit = default, double? minAvgSeedPopulationValue = default, double? maxAvgSeedPopulationValue = default, string avgSeedPopulationUnit = default, DateTimeOffset? minPlantingDateTime = default, DateTimeOffset? maxPlantingDateTime = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ListAsync(class System.Collections.Generic.IEnumerable`1&lt;string&gt; farmIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fieldIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; seasonIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropVarietyIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropIds, valuetype System.Nullable`1&lt;float64&gt; minAvgYieldValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgYieldValue, string avgYieldUnit, valuetype System.Nullable`1&lt;float64&gt; minAvgSeedPopulationValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgSeedPopulationValue, string avgSeedPopulationUnit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minPlantingDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxPlantingDateTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.ListAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListAsync (Optional farmIds As IEnumerable(Of String) = Nothing, Optional fieldIds As IEnumerable(Of String) = Nothing, Optional seasonIds As IEnumerable(Of String) = Nothing, Optional cropVarietyIds As IEnumerable(Of String) = Nothing, Optional cropIds As IEnumerable(Of String) = Nothing, Optional minAvgYieldValue As Nullable(Of Double) = Nothing, Optional maxAvgYieldValue As Nullable(Of Double) = Nothing, Optional avgYieldUnit As String = Nothing, Optional minAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional maxAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional avgSeedPopulationUnit As String = Nothing, Optional minPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ListAsync : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ListAsync : seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.ListAsync (farmIds, fieldIds, seasonIds, cropVarietyIds, cropIds, minAvgYieldValue, maxAvgYieldValue, avgYieldUnit, minAvgSeedPopulationValue, maxAvgSeedPopulationValue, avgSeedPopulationUnit, minPlantingDateTime, maxPlantingDateTime, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="fieldIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="seasonIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropVarietyIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgYieldUnit" Type="System.String" />
        <Parameter Name="minAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgSeedPopulationUnit" Type="System.String" />
        <Parameter Name="minPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmIds"> Farm Ids of the resource. </param>
        <param name="fieldIds"> Field Ids of the resource. </param>
        <param name="seasonIds"> Season Ids of the resource. </param>
        <param name="cropVarietyIds"> CropVarietyIds of the resource. </param>
        <param name="cropIds"> Ids of the crop it belongs to. </param>
        <param name="minAvgYieldValue"> Minimum average yield value of the seasonal field(inclusive). </param>
        <param name="maxAvgYieldValue"> Maximum average yield value of the seasonal field(inclusive). </param>
        <param name="avgYieldUnit"> Unit of the average yield value attribute. </param>
        <param name="minAvgSeedPopulationValue"> Minimum average seed population value of the seasonal field(inclusive). </param>
        <param name="maxAvgSeedPopulationValue"> Maximum average seed population value of the seasonal field(inclusive). </param>
        <param name="avgSeedPopulationUnit"> Unit of average seed population value attribute. </param>
        <param name="minPlantingDateTime"> Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="maxPlantingDateTime"> Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Returns a paginated list of seasonal field resources across all farmers. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByFarmerId">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ListByFarmerId (string farmerId, System.Collections.Generic.IEnumerable&lt;string&gt; farmIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; fieldIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; seasonIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropVarietyIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropIds = default, double? minAvgYieldValue = default, double? maxAvgYieldValue = default, string avgYieldUnit = default, double? minAvgSeedPopulationValue = default, double? maxAvgSeedPopulationValue = default, string avgSeedPopulationUnit = default, DateTimeOffset? minPlantingDateTime = default, DateTimeOffset? maxPlantingDateTime = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ListByFarmerId(string farmerId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; farmIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fieldIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; seasonIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropVarietyIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropIds, valuetype System.Nullable`1&lt;float64&gt; minAvgYieldValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgYieldValue, string avgYieldUnit, valuetype System.Nullable`1&lt;float64&gt; minAvgSeedPopulationValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgSeedPopulationValue, string avgSeedPopulationUnit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minPlantingDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxPlantingDateTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.ListByFarmerId(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByFarmerId (farmerId As String, Optional farmIds As IEnumerable(Of String) = Nothing, Optional fieldIds As IEnumerable(Of String) = Nothing, Optional seasonIds As IEnumerable(Of String) = Nothing, Optional cropVarietyIds As IEnumerable(Of String) = Nothing, Optional cropIds As IEnumerable(Of String) = Nothing, Optional minAvgYieldValue As Nullable(Of Double) = Nothing, Optional maxAvgYieldValue As Nullable(Of Double) = Nothing, Optional avgYieldUnit As String = Nothing, Optional minAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional maxAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional avgSeedPopulationUnit As String = Nothing, Optional minPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ListByFarmerId : string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.ListByFarmerId : string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; Azure.Response" Usage="seasonalFieldsClient.ListByFarmerId (farmerId, farmIds, fieldIds, seasonIds, cropVarietyIds, cropIds, minAvgYieldValue, maxAvgYieldValue, avgYieldUnit, minAvgSeedPopulationValue, maxAvgSeedPopulationValue, avgSeedPopulationUnit, minPlantingDateTime, maxPlantingDateTime, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="farmIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="fieldIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="seasonIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropVarietyIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgYieldUnit" Type="System.String" />
        <Parameter Name="minAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgSeedPopulationUnit" Type="System.String" />
        <Parameter Name="minPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="farmIds"> Farm Ids of the resource. </param>
        <param name="fieldIds"> Field Ids of the resource. </param>
        <param name="seasonIds"> Season Ids of the resource. </param>
        <param name="cropVarietyIds"> CropVarietyIds of the resource. </param>
        <param name="cropIds"> Ids of the crop it belongs to. </param>
        <param name="minAvgYieldValue"> Minimum average yield value of the seasonal field(inclusive). </param>
        <param name="maxAvgYieldValue"> Maximum average yield value of the seasonal field(inclusive). </param>
        <param name="avgYieldUnit"> Unit of the average yield value attribute. </param>
        <param name="minAvgSeedPopulationValue"> Minimum average seed population value of the seasonal field(inclusive). </param>
        <param name="maxAvgSeedPopulationValue"> Maximum average seed population value of the seasonal field(inclusive). </param>
        <param name="avgSeedPopulationUnit"> Unit of average seed population value attribute. </param>
        <param name="minPlantingDateTime"> Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="maxPlantingDateTime"> Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Returns a paginated list of seasonal field resources under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByFarmerIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ListByFarmerIdAsync (string farmerId, System.Collections.Generic.IEnumerable&lt;string&gt; farmIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; fieldIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; seasonIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropVarietyIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; cropIds = default, double? minAvgYieldValue = default, double? maxAvgYieldValue = default, string avgYieldUnit = default, double? minAvgSeedPopulationValue = default, double? maxAvgSeedPopulationValue = default, string avgSeedPopulationUnit = default, DateTimeOffset? minPlantingDateTime = default, DateTimeOffset? maxPlantingDateTime = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestOptions requestOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ListByFarmerIdAsync(string farmerId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; farmIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; fieldIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; seasonIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropVarietyIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; cropIds, valuetype System.Nullable`1&lt;float64&gt; minAvgYieldValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgYieldValue, string avgYieldUnit, valuetype System.Nullable`1&lt;float64&gt; minAvgSeedPopulationValue, valuetype System.Nullable`1&lt;float64&gt; maxAvgSeedPopulationValue, string avgSeedPopulationUnit, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minPlantingDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxPlantingDateTime, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestOptions requestOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.ListByFarmerIdAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByFarmerIdAsync (farmerId As String, Optional farmIds As IEnumerable(Of String) = Nothing, Optional fieldIds As IEnumerable(Of String) = Nothing, Optional seasonIds As IEnumerable(Of String) = Nothing, Optional cropVarietyIds As IEnumerable(Of String) = Nothing, Optional cropIds As IEnumerable(Of String) = Nothing, Optional minAvgYieldValue As Nullable(Of Double) = Nothing, Optional maxAvgYieldValue As Nullable(Of Double) = Nothing, Optional avgYieldUnit As String = Nothing, Optional minAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional maxAvgSeedPopulationValue As Nullable(Of Double) = Nothing, Optional avgSeedPopulationUnit As String = Nothing, Optional minPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPlantingDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional requestOptions As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ListByFarmerIdAsync : string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ListByFarmerIdAsync : string * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="seasonalFieldsClient.ListByFarmerIdAsync (farmerId, farmIds, fieldIds, seasonIds, cropVarietyIds, cropIds, minAvgYieldValue, maxAvgYieldValue, avgYieldUnit, minAvgSeedPopulationValue, maxAvgSeedPopulationValue, avgSeedPopulationUnit, minPlantingDateTime, maxPlantingDateTime, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, requestOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="farmIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="fieldIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="seasonIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropVarietyIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cropIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgYieldValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgYieldUnit" Type="System.String" />
        <Parameter Name="minAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgSeedPopulationValue" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="avgSeedPopulationUnit" Type="System.String" />
        <Parameter Name="minPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPlantingDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="requestOptions" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="farmIds"> Farm Ids of the resource. </param>
        <param name="fieldIds"> Field Ids of the resource. </param>
        <param name="seasonIds"> Season Ids of the resource. </param>
        <param name="cropVarietyIds"> CropVarietyIds of the resource. </param>
        <param name="cropIds"> Ids of the crop it belongs to. </param>
        <param name="minAvgYieldValue"> Minimum average yield value of the seasonal field(inclusive). </param>
        <param name="maxAvgYieldValue"> Maximum average yield value of the seasonal field(inclusive). </param>
        <param name="avgYieldUnit"> Unit of the average yield value attribute. </param>
        <param name="minAvgSeedPopulationValue"> Minimum average seed population value of the seasonal field(inclusive). </param>
        <param name="maxAvgSeedPopulationValue"> Maximum average seed population value of the seasonal field(inclusive). </param>
        <param name="avgSeedPopulationUnit"> Unit of average seed population value attribute. </param>
        <param name="minPlantingDateTime"> Minimum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="maxPlantingDateTime"> Maximum planting datetime, sample format: yyyy-MM-ddTHH:mm:ssZ. </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="requestOptions"> The request options. </param>
        <summary> Returns a paginated list of seasonal field resources under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Verticals.AgriFood.Farming.SeasonalFieldsClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
